

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Feb 04 10:51:40 2025

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F25K80
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    44                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    45                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    46   000000                     
    47                           ; Generated 21/07/2023 GMT
    48                           ; 
    49                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution. Publication is not required when
    63                           ;        this file is used in an embedded application.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC18F25K80 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81   000000                     
    82 ;; Function _EUSART1_Read is unused but had its address taken
    83   000000                     _RCREG1	set	4014
    84   000000                     _TXREG1	set	4013
    85   000000                     _SPBRG1	set	4015
    86   000000                     _TXSTA1	set	4012
    87                           
    88                           	psect	nvCOMRAM
    89   000045                     __pnvCOMRAM:
    90                           	callstack 0
    91   000045                     _TMR2_InterruptHandler:
    92                           	callstack 0
    93   000045                     	ds	2
    94   000047                     _EUSART1_ErrorHandler:
    95                           	callstack 0
    96   000047                     	ds	2
    97   000049                     _EUSART1_OverrunErrorHandler:
    98                           	callstack 0
    99   000049                     	ds	2
   100   00004B                     _EUSART1_FramingErrorHandler:
   101                           	callstack 0
   102   00004B                     	ds	2
   103   00004D                     _EUSART1_RxDefaultInterruptHandler:
   104                           	callstack 0
   105   00004D                     	ds	2
   106   00004F                     _EUSART1_TxDefaultInterruptHandler:
   107                           	callstack 0
   108   00004F                     	ds	2
   109   000000                     _T2CONbits	set	4042
   110   000000                     _RCSTA1bits	set	4011
   111   000000                     _TXSTA1bits	set	4012
   112   000000                     _CCP2CON	set	3920
   113   000000                     _WPUB	set	3931
   114   000000                     _ANCON1	set	3932
   115   000000                     _ANCON0	set	3933
   116   000000                     _LATA	set	3977
   117   000000                     _TRISA	set	3986
   118   000000                     _LATC	set	3979
   119   000000                     _LATB	set	3978
   120   000000                     _CCPTMRSbits	set	3993
   121   000000                     _REFOCON	set	3994
   122   000000                     _OSCTUNE	set	3995
   123   000000                     _OSCCON2	set	4050
   124   000000                     _OSCCON	set	4051
   125   000000                     _INTCON2bits	set	4081
   126   000000                     _TRISC	set	3988
   127   000000                     _TRISB	set	3987
   128   000000                     _SPBRGH1	set	3965
   129   000000                     _INTCONbits	set	4082
   130   000000                     _PIE1bits	set	3997
   131   000000                     _PIR1bits	set	3998
   132   000000                     _BAUDCON1	set	4007
   133   000000                     _RCSTA1	set	4011
   134   000000                     _T2CON	set	4042
   135   000000                     _PR2	set	4043
   136   000000                     _RCONbits	set	4048
   137   000000                     _TMR2	set	4044
   138   000000                     _CCPR2H	set	3922
   139   000000                     _CCPR2L	set	3921
   140                           
   141                           	psect	smallconst
   142   000F00                     __psmallconst:
   143                           	callstack 0
   144   000F00  00                 	db	0
   145   000F01  25                 	db	37
   146   000F02  63                 	db	99	;'c'
   147   000F03  20                 	db	32
   148   000F04  64                 	db	100	;'d'
   149   000F05  E9                 	db	-23
   150   000F06  62                 	db	98	;'b'
   151   000F07  61                 	db	97	;'a'
   152   000F08  72                 	db	114	;'r'
   153   000F09  72                 	db	114	;'r'
   154   000F0A  61                 	db	97	;'a'
   155   000F0B  67                 	db	103	;'g'
   156   000F0C  65                 	db	101	;'e'
   157   000F0D  20                 	db	32
   158   000F0E  72                 	db	114	;'r'
   159   000F0F  E9                 	db	-23
   160   000F10  75                 	db	117	;'u'
   161   000F11  73                 	db	115	;'s'
   162   000F12  73                 	db	115	;'s'
   163   000F13  69                 	db	105	;'i'
   164   000F14  00                 	db	0
   165   000F15  25                 	db	37
   166   000F16  63                 	db	99	;'c'
   167   000F17  20                 	db	32
   168   000F18  62                 	db	98	;'b'
   169   000F19  61                 	db	97	;'a'
   170   000F1A  72                 	db	114	;'r'
   171   000F1B  72                 	db	114	;'r'
   172   000F1C  61                 	db	97	;'a'
   173   000F1D  67                 	db	103	;'g'
   174   000F1E  65                 	db	101	;'e'
   175   000F1F  20                 	db	32
   176   000F20  72                 	db	114	;'r'
   177   000F21  E9                 	db	-23
   178   000F22  75                 	db	117	;'u'
   179   000F23  73                 	db	115	;'s'
   180   000F24  73                 	db	115	;'s'
   181   000F25  69                 	db	105	;'i'
   182   000F26  00                 	db	0
   183   000F27  00                 	db	0	; dummy byte at the end
   184   000000                     
   185                           ; #config settings
   186                           
   187                           	psect	cinit
   188   00133A                     __pcinit:
   189                           	callstack 0
   190   00133A                     start_initialization:
   191                           	callstack 0
   192   00133A                     __initialization:
   193                           	callstack 0
   194                           
   195                           ; Clear objects allocated to BANK0 (32 bytes)
   196   00133A  EE00  F060         	lfsr	0,__pbssBANK0
   197   00133E  0E20               	movlw	32
   198   001340                     clear_0:
   199   001340  6AEE               	clrf	postinc0,c
   200   001342  06E8               	decf	wreg,f,c
   201   001344  E1FD               	bnz	clear_0
   202                           
   203                           ; Clear objects allocated to COMRAM (39 bytes)
   204   001346  EE00  F001         	lfsr	0,__pbssCOMRAM
   205   00134A  0E27               	movlw	39
   206   00134C                     clear_1:
   207   00134C  6AEE               	clrf	postinc0,c
   208   00134E  06E8               	decf	wreg,f,c
   209   001350  E1FD               	bnz	clear_1
   210   001352                     end_of_initialization:
   211                           	callstack 0
   212   001352                     __end_of__initialization:
   213                           	callstack 0
   214   001352  9051               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   215   001354  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   216   001356  0E00               	movlw	low (__Lmediumconst shr (0+16))
   217   001358  6EF8               	movwf	tblptru,c
   218   00135A  0100               	movlb	0
   219   00135C  EF33  F009         	goto	_main	;jump to C main() function
   220                           
   221                           	psect	bssCOMRAM
   222   000001                     __pbssCOMRAM:
   223                           	callstack 0
   224   000001                     _eusart1RxStatusBuffer:
   225                           	callstack 0
   226   000001                     	ds	8
   227   000009                     _eusart1RxBuffer:
   228                           	callstack 0
   229   000009                     	ds	8
   230   000011                     _eusart1TxBuffer:
   231                           	callstack 0
   232   000011                     	ds	8
   233   000019                     _width:
   234                           	callstack 0
   235   000019                     	ds	2
   236   00001B                     _prec:
   237                           	callstack 0
   238   00001B                     	ds	2
   239   00001D                     _i:
   240                           	callstack 0
   241   00001D                     	ds	2
   242   00001F                     _flags:
   243                           	callstack 0
   244   00001F                     	ds	1
   245   000020                     _verif:
   246                           	callstack 0
   247   000020                     	ds	1
   248   000021                     _eusart1RxLastError:
   249                           	callstack 0
   250   000021                     	ds	1
   251   000022                     _eusart1RxCount:
   252                           	callstack 0
   253   000022                     	ds	1
   254   000023                     _eusart1RxTail:
   255                           	callstack 0
   256   000023                     	ds	1
   257   000024                     _eusart1RxHead:
   258                           	callstack 0
   259   000024                     	ds	1
   260   000025                     _eusart1TxBufferRemaining:
   261                           	callstack 0
   262   000025                     	ds	1
   263   000026                     _eusart1TxTail:
   264                           	callstack 0
   265   000026                     	ds	1
   266   000027                     _eusart1TxHead:
   267                           	callstack 0
   268   000027                     	ds	1
   269                           
   270                           	psect	bssBANK0
   271   000060                     __pbssBANK0:
   272                           	callstack 0
   273   000060                     	ds	32
   274                           
   275                           	psect	cstackCOMRAM
   276   000028                     __pcstackCOMRAM:
   277                           	callstack 0
   278   000028                     ??_INTERRUPT_InterruptManager:
   279   000028                     
   280                           ; 1 bytes @ 0x0
   281   000028                     	ds	4
   282   00002C                     EUSART1_Write@txData:
   283                           	callstack 0
   284   00002C                     EUSART1_SetFramingErrorHandler@interruptHandler:
   285                           	callstack 0
   286   00002C                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   287                           	callstack 0
   288   00002C                     EUSART1_SetErrorHandler@interruptHandler:
   289                           	callstack 0
   290   00002C                     EUSART1_SetTxInterruptHandler@interruptHandler:
   291                           	callstack 0
   292   00002C                     EUSART1_SetRxInterruptHandler@interruptHandler:
   293                           	callstack 0
   294   00002C                     TMR2_SetInterruptHandler@InterruptHandler:
   295                           	callstack 0
   296                           
   297                           ; 2 bytes @ 0x4
   298   00002C                     	ds	1
   299   00002D                     putch@txData:
   300                           	callstack 0
   301                           
   302                           ; 1 bytes @ 0x5
   303   00002D                     	ds	1
   304   00002E                     fputc@c:
   305                           	callstack 0
   306                           
   307                           ; 2 bytes @ 0x6
   308   00002E                     	ds	2
   309   000030                     fputc@fp:
   310                           	callstack 0
   311                           
   312                           ; 2 bytes @ 0x8
   313   000030                     	ds	2
   314   000032                     ??_fputc:
   315                           
   316                           ; 1 bytes @ 0xA
   317   000032                     	ds	5
   318   000037                     vfpfcnvrt@fp:
   319                           	callstack 0
   320                           
   321                           ; 2 bytes @ 0xF
   322   000037                     	ds	2
   323   000039                     vfpfcnvrt@fmt:
   324                           	callstack 0
   325                           
   326                           ; 1 bytes @ 0x11
   327   000039                     	ds	1
   328   00003A                     vfpfcnvrt@ap:
   329                           	callstack 0
   330                           
   331                           ; 1 bytes @ 0x12
   332   00003A                     	ds	1
   333   00003B                     vfpfcnvrt@c:
   334                           	callstack 0
   335                           
   336                           ; 1 bytes @ 0x13
   337   00003B                     	ds	1
   338   00003C                     ?_vfprintf:
   339                           	callstack 0
   340   00003C                     vfprintf@fp:
   341                           	callstack 0
   342                           
   343                           ; 2 bytes @ 0x14
   344   00003C                     	ds	2
   345   00003E                     vfprintf@fmt:
   346                           	callstack 0
   347                           
   348                           ; 1 bytes @ 0x16
   349   00003E                     	ds	1
   350   00003F                     vfprintf@ap:
   351                           	callstack 0
   352                           
   353                           ; 1 bytes @ 0x17
   354   00003F                     	ds	1
   355   000040                     vfprintf@cfmt:
   356                           	callstack 0
   357                           
   358                           ; 1 bytes @ 0x18
   359   000040                     	ds	1
   360   000041                     ?_printf:
   361                           	callstack 0
   362   000041                     printf@fmt:
   363                           	callstack 0
   364                           
   365                           ; 1 bytes @ 0x19
   366   000041                     	ds	1
   367   000042                     printf@ap:
   368                           	callstack 0
   369                           
   370                           ; 1 bytes @ 0x1A
   371   000042                     	ds	1
   372   000043                     ??_main:
   373                           
   374                           ; 1 bytes @ 0x1B
   375   000043                     	ds	2
   376                           
   377 ;;
   378 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   379 ;;
   380 ;; *************** function _main *****************
   381 ;; Defined at:
   382 ;;		line 6 in file "main.c"
   383 ;; Parameters:    Size  Location     Type
   384 ;;		None
   385 ;; Auto vars:     Size  Location     Type
   386 ;;		None
   387 ;; Return value:  Size  Location     Type
   388 ;;                  1    wreg      void 
   389 ;; Registers used:
   390 ;;		wreg, status,2, status,0, cstack
   391 ;; Tracked objects:
   392 ;;		On entry : 0/0
   393 ;;		On exit  : 0/0
   394 ;;		Unchanged: 0/0
   395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   398 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   399 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   400 ;;Total ram usage:        2 bytes
   401 ;; Hardware stack levels required when called: 10
   402 ;; This function calls:
   403 ;;		_EUSART1_is_rx_ready
   404 ;;		_SYSTEM_Initialize
   405 ;;		_printf
   406 ;; This function is called by:
   407 ;;		Startup code after reset
   408 ;; This function uses a non-reentrant model
   409 ;;
   410                           
   411                           	psect	text0
   412   001266                     __ptext0:
   413                           	callstack 0
   414   001266                     _main:
   415                           	callstack 21
   416   001266                     
   417                           ;main.c: 9:     SYSTEM_Initialize();
   418   001266  ECDF  F009         	call	_SYSTEM_Initialize	;wreg free
   419   00126A                     
   420                           ;main.c: 11:     (INTCONbits.GIE = 1);
   421   00126A  8EF2               	bsf	242,7,c	;volatile
   422   00126C                     
   423                           ;main.c: 12:     (INTCONbits.PEIE = 1);
   424   00126C  8CF2               	bsf	242,6,c	;volatile
   425   00126E                     l1481:
   426                           
   427                           ;main.c: 15:     {;main.c: 16:         if (EUSART1_is_rx_ready())
   428   00126E  ECEC  F009         	call	_EUSART1_is_rx_ready	;wreg free
   429   001272  0E00               	movlw	0
   430   001274  6E43               	movwf	??_main^0,c
   431   001276  0E00               	movlw	0
   432   001278  6E44               	movwf	(??_main+1)^0,c
   433                           
   434                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   435                           ; Switch size 1, requested type "simple"
   436                           ; Number of cases is 1, Range of values is 0 to 0
   437                           ; switch strategies available:
   438                           ; Name         Instructions Cycles
   439                           ; simple_byte            4     3 (average)
   440                           ;	Chosen strategy is simple_byte
   441   00127A  5044               	movf	(??_main+1)^0,w,c
   442   00127C  0A00               	xorlw	0	; case 0
   443   00127E  B4D8               	btfsc	status,2,c
   444   001280  EF44  F009         	goto	l1515
   445   001284  EF37  F009         	goto	l1481
   446   001288                     l1515:
   447                           
   448                           ; Switch size 1, requested type "simple"
   449                           ; Number of cases is 2, Range of values is 1 to 2
   450                           ; switch strategies available:
   451                           ; Name         Instructions Cycles
   452                           ; simple_byte            7     4 (average)
   453                           ;	Chosen strategy is simple_byte
   454   001288  5043               	movf	??_main^0,w,c
   455   00128A  0A01               	xorlw	1	; case 1
   456   00128C  B4D8               	btfsc	status,2,c
   457   00128E  EF4F  F009         	goto	l315
   458   001292  0A03               	xorlw	3	; case 2
   459   001294  B4D8               	btfsc	status,2,c
   460   001296  EF4F  F009         	goto	l315
   461   00129A  EF37  F009         	goto	l1481
   462   00129E                     l315:
   463   00129E  EF37  F009         	goto	l1481
   464   0012A2  EF6A  F000         	goto	start
   465   0012A6                     __end_of_main:
   466                           	callstack 0
   467                           
   468 ;; *************** function _printf *****************
   469 ;; Defined at:
   470 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\printf.c"
   471 ;; Parameters:    Size  Location     Type
   472 ;;  fmt             1   25[COMRAM] PTR const unsigned char 
   473 ;;		 -> STR_2(20), STR_1(18), 
   474 ;; Auto vars:     Size  Location     Type
   475 ;;  ret             2    0        int 
   476 ;;  ap              1   26[COMRAM] PTR void [1]
   477 ;;		 -> ?_printf(2), 
   478 ;; Return value:  Size  Location     Type
   479 ;;                  2   25[COMRAM] int 
   480 ;; Registers used:
   481 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   482 ;; Tracked objects:
   483 ;;		On entry : 0/0
   484 ;;		On exit  : 0/0
   485 ;;		Unchanged: 0/0
   486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   487 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   488 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   490 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   491 ;;Total ram usage:        2 bytes
   492 ;; Hardware stack levels used: 1
   493 ;; Hardware stack levels required when called: 9
   494 ;; This function calls:
   495 ;;		_vfprintf
   496 ;; This function is called by:
   497 ;;		_main
   498 ;; This function uses a non-reentrant model
   499 ;;
   500                           
   501                           	psect	text1
   502   0013A4                     __ptext1:
   503                           	callstack 0
   504   0013A4                     _printf:
   505                           	callstack 21
   506   0013A4  0E42               	movlw	low (?_printf+1)
   507   0013A6  6E42               	movwf	printf@ap^0,c
   508   0013A8  0E00               	movlw	0
   509   0013AA  6E3C               	movwf	vfprintf@fp^0,c
   510   0013AC  0E00               	movlw	0
   511   0013AE  6E3D               	movwf	(vfprintf@fp+1)^0,c
   512   0013B0  C041  F03E         	movff	printf@fmt,vfprintf@fmt
   513   0013B4  0E42               	movlw	low printf@ap
   514   0013B6  6E3F               	movwf	vfprintf@ap^0,c
   515   0013B8  EC12  F009         	call	_vfprintf	;wreg free
   516   0013BC  0012               	return		;funcret
   517   0013BE                     __end_of_printf:
   518                           	callstack 0
   519                           
   520 ;; *************** function _vfprintf *****************
   521 ;; Defined at:
   522 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
   523 ;; Parameters:    Size  Location     Type
   524 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
   525 ;;		 -> NULL(0), 
   526 ;;  fmt             1   22[COMRAM] PTR const unsigned char 
   527 ;;		 -> STR_2(20), STR_1(18), 
   528 ;;  ap              1   23[COMRAM] PTR PTR void 
   529 ;;		 -> printf@ap(1), 
   530 ;; Auto vars:     Size  Location     Type
   531 ;;  cfmt            1   24[COMRAM] PTR unsigned char 
   532 ;;		 -> STR_2(20), STR_1(18), 
   533 ;; Return value:  Size  Location     Type
   534 ;;                  2   20[COMRAM] int 
   535 ;; Registers used:
   536 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   537 ;; Tracked objects:
   538 ;;		On entry : 0/0
   539 ;;		On exit  : 0/0
   540 ;;		Unchanged: 0/0
   541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   542 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   543 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   545 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   546 ;;Total ram usage:        5 bytes
   547 ;; Hardware stack levels used: 1
   548 ;; Hardware stack levels required when called: 8
   549 ;; This function calls:
   550 ;;		_vfpfcnvrt
   551 ;; This function is called by:
   552 ;;		_printf
   553 ;; This function uses a non-reentrant model
   554 ;;
   555                           
   556                           	psect	text2
   557   001224                     __ptext2:
   558                           	callstack 0
   559   001224                     _vfprintf:
   560                           	callstack 21
   561   001224                     
   562                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
   563   001224  C03E  F040         	movff	vfprintf@fmt,vfprintf@cfmt
   564                           
   565                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
   566   001228  EF20  F009         	goto	l1451
   567   00122C                     l1449:
   568                           
   569                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
   570   00122C  C03C  F037         	movff	vfprintf@fp,vfpfcnvrt@fp
   571   001230  C03D  F038         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
   572   001234  0E40               	movlw	low vfprintf@cfmt
   573   001236  6E39               	movwf	vfpfcnvrt@fmt^0,c
   574   001238  C03F  F03A         	movff	vfprintf@ap,vfpfcnvrt@ap
   575   00123C  ECF9  F007         	call	_vfpfcnvrt	;wreg free
   576   001240                     l1451:
   577                           
   578                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
   579   001240  C040  FFF6         	movff	vfprintf@cfmt,tblptrl
   580   001244                     	if	1	;There is more than 1 active tblptr byte
   581   001244  0E0F               	movlw	high __smallconst
   582   001246  6EF7               	movwf	tblptrh,c
   583   001248                     	endif
   584   001248                     	if	0	;tblptru may be non-zero
   585   001248                     	endif
   586   001248                     	if	0	;tblptru may be non-zero
   587   001248                     	endif
   588   001248  0008               	tblrd		*
   589   00124A  50F5               	movf	tablat,w,c
   590   00124C  0900               	iorlw	0
   591   00124E  A4D8               	btfss	status,2,c
   592   001250  EF2C  F009         	goto	u411
   593   001254  EF2E  F009         	goto	u410
   594   001258                     u411:
   595   001258  EF16  F009         	goto	l1449
   596   00125C                     u410:
   597   00125C                     
   598                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
   599   00125C  0E00               	movlw	0
   600   00125E  6E3D               	movwf	(?_vfprintf+1)^0,c
   601   001260  0E00               	movlw	0
   602   001262  6E3C               	movwf	?_vfprintf^0,c
   603   001264  0012               	return		;funcret
   604   001266                     __end_of_vfprintf:
   605                           	callstack 0
   606                           
   607 ;; *************** function _vfpfcnvrt *****************
   608 ;; Defined at:
   609 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
   610 ;; Parameters:    Size  Location     Type
   611 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
   612 ;;		 -> NULL(0), 
   613 ;;  fmt             1   17[COMRAM] PTR PTR unsigned char 
   614 ;;		 -> vfprintf@cfmt(1), 
   615 ;;  ap              1   18[COMRAM] PTR PTR void 
   616 ;;		 -> printf@ap(1), 
   617 ;; Auto vars:     Size  Location     Type
   618 ;;  cp              3    0        PTR unsigned char 
   619 ;;  c               1   19[COMRAM] unsigned char 
   620 ;;  done            1    0        _Bool 
   621 ;; Return value:  Size  Location     Type
   622 ;;                  1    wreg      void 
   623 ;; Registers used:
   624 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   625 ;; Tracked objects:
   626 ;;		On entry : 0/0
   627 ;;		On exit  : 0/0
   628 ;;		Unchanged: 0/0
   629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   630 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   631 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   633 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   634 ;;Total ram usage:        5 bytes
   635 ;; Hardware stack levels used: 1
   636 ;; Hardware stack levels required when called: 7
   637 ;; This function calls:
   638 ;;		_fputc
   639 ;; This function is called by:
   640 ;;		_vfprintf
   641 ;; This function uses a non-reentrant model
   642 ;;
   643                           
   644                           	psect	text3
   645   000FF2                     __ptext3:
   646                           	callstack 0
   647   000FF2                     _vfpfcnvrt:
   648                           	callstack 21
   649   000FF2                     
   650                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
   651   000FF2  5039               	movf	vfpfcnvrt@fmt^0,w,c
   652   000FF4  6ED9               	movwf	fsr2l,c
   653   000FF6  6ADA               	clrf	fsr2h,c
   654   000FF8  CFDF FFF6          	movff	indf2,tblptrl
   655   000FFC                     	if	1	;There is more than 1 active tblptr byte
   656   000FFC  0E0F               	movlw	high __smallconst
   657   000FFE  6EF7               	movwf	tblptrh,c
   658   001000                     	endif
   659   001000                     	if	0	;tblptru may be non-zero
   660   001000                     	endif
   661   001000                     	if	0	;tblptru may be non-zero
   662   001000                     	endif
   663   001000  0008               	tblrd		*
   664   001002  50F5               	movf	tablat,w,c
   665   001004  0A25               	xorlw	37
   666   001006  A4D8               	btfss	status,2,c
   667   001008  EF08  F008         	goto	u391
   668   00100C  EF0A  F008         	goto	u390
   669   001010                     u391:
   670   001010  EF46  F008         	goto	l1407
   671   001014                     u390:
   672   001014                     
   673                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
   674   001014  5039               	movf	vfpfcnvrt@fmt^0,w,c
   675   001016  6ED9               	movwf	fsr2l,c
   676   001018  6ADA               	clrf	fsr2h,c
   677   00101A  2ADF               	incf	indf2,f,c
   678   00101C                     
   679                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
   680   00101C  0E00               	movlw	0
   681   00101E  6E1A               	movwf	(_width+1)^0,c
   682   001020  0E00               	movlw	0
   683   001022  6E19               	movwf	_width^0,c
   684   001024  C019  F01F         	movff	_width,_flags
   685   001028                     
   686                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
   687   001028  681B               	setf	_prec^0,c
   688   00102A  681C               	setf	(_prec+1)^0,c
   689   00102C                     
   690                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1273:         if 
      +                          ((*fmt)[0] == 'c') {
   691   00102C  5039               	movf	vfpfcnvrt@fmt^0,w,c
   692   00102E  6ED9               	movwf	fsr2l,c
   693   001030  6ADA               	clrf	fsr2h,c
   694   001032  CFDF FFF6          	movff	indf2,tblptrl
   695   001036                     	if	1	;There is more than 1 active tblptr byte
   696   001036  0E0F               	movlw	high __smallconst
   697   001038  6EF7               	movwf	tblptrh,c
   698   00103A                     	endif
   699   00103A                     	if	0	;tblptru may be non-zero
   700   00103A                     	endif
   701   00103A                     	if	0	;tblptru may be non-zero
   702   00103A                     	endif
   703   00103A  0008               	tblrd		*
   704   00103C  50F5               	movf	tablat,w,c
   705   00103E  0A63               	xorlw	99
   706   001040  A4D8               	btfss	status,2,c
   707   001042  EF25  F008         	goto	u401
   708   001046  EF27  F008         	goto	u400
   709   00104A                     u401:
   710   00104A  EF40  F008         	goto	l1403
   711   00104E                     u400:
   712   00104E                     
   713                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1274:            
      +                           ++*fmt;
   714   00104E  5039               	movf	vfpfcnvrt@fmt^0,w,c
   715   001050  6ED9               	movwf	fsr2l,c
   716   001052  6ADA               	clrf	fsr2h,c
   717   001054  2ADF               	incf	indf2,f,c
   718   001056                     
   719                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1275:            
      +                           c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
   720   001056  503A               	movf	vfpfcnvrt@ap^0,w,c
   721   001058  6ED9               	movwf	fsr2l,c
   722   00105A  6ADA               	clrf	fsr2h,c
   723   00105C  50DF               	movf	indf2,w,c
   724   00105E  2ADF               	incf	indf2,f,c
   725   001060  2ADF               	incf	indf2,f,c
   726   001062  6ED9               	movwf	fsr2l,c
   727   001064  6ADA               	clrf	fsr2h,c
   728   001066  50DF               	movf	indf2,w,c
   729   001068  6E3B               	movwf	vfpfcnvrt@c^0,c
   730   00106A                     
   731                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1277:    fputc(c,
      +                           fp);
   732   00106A  C03B  F02E         	movff	vfpfcnvrt@c,fputc@c
   733   00106E  6A2F               	clrf	(fputc@c+1)^0,c
   734   001070  C037  F030         	movff	vfpfcnvrt@fp,fputc@fp
   735   001074  C038  F031         	movff	vfpfcnvrt@fp+1,fputc@fp+1
   736   001078  EC94  F007         	call	_fputc	;wreg free
   737   00107C  EF59  F008         	goto	l1027
   738   001080                     l1403:
   739                           
   740                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
   741   001080  5039               	movf	vfpfcnvrt@fmt^0,w,c
   742   001082  6ED9               	movwf	fsr2l,c
   743   001084  6ADA               	clrf	fsr2h,c
   744   001086  2ADF               	incf	indf2,f,c
   745   001088  EF59  F008         	goto	l1027
   746   00108C                     l1407:
   747                           
   748                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
   749   00108C  5039               	movf	vfpfcnvrt@fmt^0,w,c
   750   00108E  6ED9               	movwf	fsr2l,c
   751   001090  6ADA               	clrf	fsr2h,c
   752   001092  CFDF FFF6          	movff	indf2,tblptrl
   753   001096                     	if	1	;There is more than 1 active tblptr byte
   754   001096  0E0F               	movlw	high __smallconst
   755   001098  6EF7               	movwf	tblptrh,c
   756   00109A                     	endif
   757   00109A                     	if	0	;tblptru may be non-zero
   758   00109A                     	endif
   759   00109A                     	if	0	;tblptru may be non-zero
   760   00109A                     	endif
   761   00109A  0008               	tblrd		*
   762   00109C  50F5               	movf	tablat,w,c
   763   00109E  6E2E               	movwf	fputc@c^0,c
   764   0010A0  6A2F               	clrf	(fputc@c+1)^0,c
   765   0010A2  C037  F030         	movff	vfpfcnvrt@fp,fputc@fp
   766   0010A6  C038  F031         	movff	vfpfcnvrt@fp+1,fputc@fp+1
   767   0010AA  EC94  F007         	call	_fputc	;wreg free
   768   0010AE  EF40  F008         	goto	l1403
   769   0010B2                     l1027:
   770   0010B2  0012               	return		;funcret
   771   0010B4                     __end_of_vfpfcnvrt:
   772                           	callstack 0
   773                           
   774 ;; *************** function _fputc *****************
   775 ;; Defined at:
   776 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
   777 ;; Parameters:    Size  Location     Type
   778 ;;  c               2    6[COMRAM] int 
   779 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
   780 ;;		 -> NULL(0), 
   781 ;; Auto vars:     Size  Location     Type
   782 ;;		None
   783 ;; Return value:  Size  Location     Type
   784 ;;                  2    6[COMRAM] int 
   785 ;; Registers used:
   786 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   787 ;; Tracked objects:
   788 ;;		On entry : 0/0
   789 ;;		On exit  : 0/0
   790 ;;		Unchanged: 0/0
   791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   792 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   794 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   795 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   796 ;;Total ram usage:        9 bytes
   797 ;; Hardware stack levels used: 1
   798 ;; Hardware stack levels required when called: 6
   799 ;; This function calls:
   800 ;;		_putch
   801 ;; This function is called by:
   802 ;;		_vfpfcnvrt
   803 ;; This function uses a non-reentrant model
   804 ;;
   805                           
   806                           	psect	text4
   807   000F28                     __ptext4:
   808                           	callstack 0
   809   000F28                     _fputc:
   810                           	callstack 21
   811   000F28  5030               	movf	fputc@fp^0,w,c
   812   000F2A  1031               	iorwf	(fputc@fp+1)^0,w,c
   813   000F2C  B4D8               	btfsc	status,2,c
   814   000F2E  EF9B  F007         	goto	u351
   815   000F32  EF9D  F007         	goto	u350
   816   000F36                     u351:
   817   000F36  EFA6  F007         	goto	l1363
   818   000F3A                     u350:
   819   000F3A  5030               	movf	fputc@fp^0,w,c
   820   000F3C  1031               	iorwf	(fputc@fp+1)^0,w,c
   821   000F3E  A4D8               	btfss	status,2,c
   822   000F40  EFA4  F007         	goto	u361
   823   000F44  EFA6  F007         	goto	u360
   824   000F48                     u361:
   825   000F48  EFAB  F007         	goto	l1365
   826   000F4C                     u360:
   827   000F4C                     l1363:
   828   000F4C  502E               	movf	fputc@c^0,w,c
   829   000F4E  EC09  F00A         	call	_putch
   830   000F52  EFF8  F007         	goto	l1045
   831   000F56                     l1365:
   832   000F56  EE20 F00A          	lfsr	2,10
   833   000F5A  5030               	movf	fputc@fp^0,w,c
   834   000F5C  26D9               	addwf	fsr2l,f,c
   835   000F5E  5031               	movf	(fputc@fp+1)^0,w,c
   836   000F60  22DA               	addwfc	fsr2h,f,c
   837   000F62  50DE               	movf	postinc2,w,c
   838   000F64  10DE               	iorwf	postinc2,w,c
   839   000F66  B4D8               	btfsc	status,2,c
   840   000F68  EFB8  F007         	goto	u371
   841   000F6C  EFBA  F007         	goto	u370
   842   000F70                     u371:
   843   000F70  EFD5  F007         	goto	l1369
   844   000F74                     u370:
   845   000F74  EE20 F00A          	lfsr	2,10
   846   000F78  5030               	movf	fputc@fp^0,w,c
   847   000F7A  26D9               	addwf	fsr2l,f,c
   848   000F7C  5031               	movf	(fputc@fp+1)^0,w,c
   849   000F7E  22DA               	addwfc	fsr2h,f,c
   850   000F80  EE10 F003          	lfsr	1,3
   851   000F84  5030               	movf	fputc@fp^0,w,c
   852   000F86  26E1               	addwf	fsr1l,f,c
   853   000F88  5031               	movf	(fputc@fp+1)^0,w,c
   854   000F8A  22E2               	addwfc	fsr1h,f,c
   855   000F8C  50DE               	movf	postinc2,w,c
   856   000F8E  5CE6               	subwf	postinc1,w,c
   857   000F90  50E6               	movf	postinc1,w,c
   858   000F92  0A80               	xorlw	128
   859   000F94  6E36               	movwf	(??_fputc+4)^0,c
   860   000F96  50DE               	movf	postinc2,w,c
   861   000F98  0A80               	xorlw	128
   862   000F9A  5836               	subwfb	(??_fputc+4)^0,w,c
   863   000F9C  B0D8               	btfsc	status,0,c
   864   000F9E  EFD3  F007         	goto	u381
   865   000FA2  EFD5  F007         	goto	u380
   866   000FA6                     u381:
   867   000FA6  EFF8  F007         	goto	l1045
   868   000FAA                     u380:
   869   000FAA                     l1369:
   870   000FAA  EE20 F003          	lfsr	2,3
   871   000FAE  5030               	movf	fputc@fp^0,w,c
   872   000FB0  26D9               	addwf	fsr2l,f,c
   873   000FB2  5031               	movf	(fputc@fp+1)^0,w,c
   874   000FB4  22DA               	addwfc	fsr2h,f,c
   875   000FB6  CFDE F032          	movff	postinc2,??_fputc
   876   000FBA  CFDD F033          	movff	postdec2,??_fputc+1
   877   000FBE  C030  FFD9         	movff	fputc@fp,fsr2l
   878   000FC2  C031  FFDA         	movff	fputc@fp+1,fsr2h
   879   000FC6  CFDE F034          	movff	postinc2,??_fputc+2
   880   000FCA  CFDD F035          	movff	postdec2,??_fputc+3
   881   000FCE  5032               	movf	??_fputc^0,w,c
   882   000FD0  2434               	addwf	(??_fputc+2)^0,w,c
   883   000FD2  6ED9               	movwf	fsr2l,c
   884   000FD4  5033               	movf	(??_fputc+1)^0,w,c
   885   000FD6  2035               	addwfc	(??_fputc+3)^0,w,c
   886   000FD8  6EDA               	movwf	fsr2h,c
   887   000FDA  C02E  FFDF         	movff	fputc@c,indf2
   888   000FDE  EE20 F003          	lfsr	2,3
   889   000FE2  5030               	movf	fputc@fp^0,w,c
   890   000FE4  26D9               	addwf	fsr2l,f,c
   891   000FE6  5031               	movf	(fputc@fp+1)^0,w,c
   892   000FE8  22DA               	addwfc	fsr2h,f,c
   893   000FEA  2ADE               	incf	postinc2,f,c
   894   000FEC  0E00               	movlw	0
   895   000FEE  22DD               	addwfc	postdec2,f,c
   896   000FF0                     l1045:
   897   000FF0  0012               	return		;funcret
   898   000FF2                     __end_of_fputc:
   899                           	callstack 0
   900                           
   901 ;; *************** function _putch *****************
   902 ;; Defined at:
   903 ;;		line 197 in file "mcc_generated_files/eusart1.c"
   904 ;; Parameters:    Size  Location     Type
   905 ;;  txData          1    wreg     unsigned char 
   906 ;; Auto vars:     Size  Location     Type
   907 ;;  txData          1    5[COMRAM] unsigned char 
   908 ;; Return value:  Size  Location     Type
   909 ;;                  1    wreg      void 
   910 ;; Registers used:
   911 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   912 ;; Tracked objects:
   913 ;;		On entry : 0/0
   914 ;;		On exit  : 0/0
   915 ;;		Unchanged: 0/0
   916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   918 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   920 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   921 ;;Total ram usage:        1 bytes
   922 ;; Hardware stack levels used: 1
   923 ;; Hardware stack levels required when called: 5
   924 ;; This function calls:
   925 ;;		_EUSART1_Write
   926 ;; This function is called by:
   927 ;;		_fputc
   928 ;; This function uses a non-reentrant model
   929 ;;
   930                           
   931                           	psect	text5
   932   001412                     __ptext5:
   933                           	callstack 0
   934   001412                     _putch:
   935                           	callstack 21
   936                           
   937                           ;incstack = 0
   938                           ;putch@txData stored from wreg
   939   001412  6E2D               	movwf	putch@txData^0,c
   940   001414                     
   941                           ;mcc_generated_files/eusart1.c: 197: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 198: {;mcc_generated_files/eusart1.c: 199:     EUSART1_Write(txData);
   942   001414  502D               	movf	putch@txData^0,w,c
   943   001416  ECE9  F008         	call	_EUSART1_Write
   944   00141A  0012               	return		;funcret
   945   00141C                     __end_of_putch:
   946                           	callstack 0
   947                           
   948 ;; *************** function _EUSART1_Write *****************
   949 ;; Defined at:
   950 ;;		line 173 in file "mcc_generated_files/eusart1.c"
   951 ;; Parameters:    Size  Location     Type
   952 ;;  txData          1    wreg     unsigned char 
   953 ;; Auto vars:     Size  Location     Type
   954 ;;  txData          1    4[COMRAM] unsigned char 
   955 ;; Return value:  Size  Location     Type
   956 ;;                  1    wreg      void 
   957 ;; Registers used:
   958 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   959 ;; Tracked objects:
   960 ;;		On entry : 0/0
   961 ;;		On exit  : 0/0
   962 ;;		Unchanged: 0/0
   963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   965 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   967 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   968 ;;Total ram usage:        1 bytes
   969 ;; Hardware stack levels used: 1
   970 ;; Hardware stack levels required when called: 4
   971 ;; This function calls:
   972 ;;		Nothing
   973 ;; This function is called by:
   974 ;;		_putch
   975 ;; This function uses a non-reentrant model
   976 ;;
   977                           
   978                           	psect	text6
   979   0011D2                     __ptext6:
   980                           	callstack 0
   981   0011D2                     _EUSART1_Write:
   982                           	callstack 21
   983                           
   984                           ;incstack = 0
   985                           ;EUSART1_Write@txData stored from wreg
   986   0011D2  6E2C               	movwf	EUSART1_Write@txData^0,c
   987   0011D4                     l1057:
   988                           
   989                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
   990   0011D4  5025               	movf	_eusart1TxBufferRemaining^0,w,c	;volatile
   991   0011D6  B4D8               	btfsc	status,2,c
   992   0011D8  EFF0  F008         	goto	u11
   993   0011DC  EFF2  F008         	goto	u10
   994   0011E0                     u11:
   995   0011E0  EFEA  F008         	goto	l1057
   996   0011E4                     u10:
   997   0011E4                     
   998                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE1bits.TX1IE)
   999   0011E4  B89D               	btfsc	157,4,c	;volatile
  1000   0011E6  EFF7  F008         	goto	u21
  1001   0011EA  EFF9  F008         	goto	u20
  1002   0011EE                     u21:
  1003   0011EE  EFFD  F008         	goto	l154
  1004   0011F2                     u20:
  1005   0011F2                     
  1006                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          XREG1 = txData;
  1007   0011F2  C02C  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  1008                           
  1009                           ;mcc_generated_files/eusart1.c: 182:     }
  1010   0011F6  EF10  F009         	goto	l1071
  1011   0011FA                     l154:
  1012                           
  1013                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE1bits.TX1IE = 0;
  1014   0011FA  989D               	bcf	157,4,c	;volatile
  1015   0011FC                     
  1016                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
  1017   0011FC  5027               	movf	_eusart1TxHead^0,w,c
  1018   0011FE  0F11               	addlw	low _eusart1TxBuffer
  1019   001200  6ED9               	movwf	fsr2l,c
  1020   001202  6ADA               	clrf	fsr2h,c
  1021   001204  C02C  FFDF         	movff	EUSART1_Write@txData,indf2
  1022   001208  2A27               	incf	_eusart1TxHead^0,f,c	;volatile
  1023   00120A                     
  1024                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
  1025   00120A  0E07               	movlw	7
  1026   00120C  6427               	cpfsgt	_eusart1TxHead^0,c	;volatile
  1027   00120E  EF0B  F009         	goto	u31
  1028   001212  EF0D  F009         	goto	u30
  1029   001216                     u31:
  1030   001216  EF0F  F009         	goto	l1069
  1031   00121A                     u30:
  1032   00121A                     
  1033                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
  1034   00121A  0E00               	movlw	0
  1035   00121C  6E27               	movwf	_eusart1TxHead^0,c	;volatile
  1036   00121E                     l1069:
  1037                           
  1038                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
  1039   00121E  0625               	decf	_eusart1TxBufferRemaining^0,f,c	;volatile
  1040   001220                     l1071:
  1041                           
  1042                           ;mcc_generated_files/eusart1.c: 193:     PIE1bits.TX1IE = 1;
  1043   001220  889D               	bsf	157,4,c	;volatile
  1044   001222  0012               	return		;funcret
  1045   001224                     __end_of_EUSART1_Write:
  1046                           	callstack 0
  1047                           
  1048 ;; *************** function _SYSTEM_Initialize *****************
  1049 ;; Defined at:
  1050 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1051 ;; Parameters:    Size  Location     Type
  1052 ;;		None
  1053 ;; Auto vars:     Size  Location     Type
  1054 ;;		None
  1055 ;; Return value:  Size  Location     Type
  1056 ;;                  1    wreg      void 
  1057 ;; Registers used:
  1058 ;;		wreg, status,2, status,0, cstack
  1059 ;; Tracked objects:
  1060 ;;		On entry : 0/0
  1061 ;;		On exit  : 0/0
  1062 ;;		Unchanged: 0/0
  1063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1067 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1068 ;;Total ram usage:        0 bytes
  1069 ;; Hardware stack levels used: 1
  1070 ;; Hardware stack levels required when called: 6
  1071 ;; This function calls:
  1072 ;;		_EUSART1_Initialize
  1073 ;;		_INTERRUPT_Initialize
  1074 ;;		_OSCILLATOR_Initialize
  1075 ;;		_PIN_MANAGER_Initialize
  1076 ;;		_PWM2_Initialize
  1077 ;;		_TMR2_Initialize
  1078 ;; This function is called by:
  1079 ;;		_main
  1080 ;; This function uses a non-reentrant model
  1081 ;;
  1082                           
  1083                           	psect	text7
  1084   0013BE                     __ptext7:
  1085                           	callstack 0
  1086   0013BE                     _SYSTEM_Initialize:
  1087                           	callstack 24
  1088   0013BE                     
  1089                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  1090   0013BE  EC32  F00A         	call	_INTERRUPT_Initialize	;wreg free
  1091   0013C2                     
  1092                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  1093   0013C2  EC89  F009         	call	_PIN_MANAGER_Initialize	;wreg free
  1094   0013C6                     
  1095                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  1096   0013C6  EC00  F00A         	call	_OSCILLATOR_Initialize	;wreg free
  1097   0013CA                     
  1098                           ;mcc_generated_files/mcc.c: 56:     PWM2_Initialize();
  1099   0013CA  ECF7  F009         	call	_PWM2_Initialize	;wreg free
  1100   0013CE                     
  1101                           ;mcc_generated_files/mcc.c: 57:     TMR2_Initialize();
  1102   0013CE  ECC3  F009         	call	_TMR2_Initialize	;wreg free
  1103   0013D2                     
  1104                           ;mcc_generated_files/mcc.c: 58:     EUSART1_Initialize();
  1105   0013D2  ECAF  F008         	call	_EUSART1_Initialize	;wreg free
  1106   0013D6  0012               	return		;funcret
  1107   0013D8                     __end_of_SYSTEM_Initialize:
  1108                           	callstack 0
  1109                           
  1110 ;; *************** function _TMR2_Initialize *****************
  1111 ;; Defined at:
  1112 ;;		line 64 in file "mcc_generated_files/tmr2.c"
  1113 ;; Parameters:    Size  Location     Type
  1114 ;;		None
  1115 ;; Auto vars:     Size  Location     Type
  1116 ;;		None
  1117 ;; Return value:  Size  Location     Type
  1118 ;;                  1    wreg      void 
  1119 ;; Registers used:
  1120 ;;		wreg, status,2, status,0, cstack
  1121 ;; Tracked objects:
  1122 ;;		On entry : 0/0
  1123 ;;		On exit  : 0/0
  1124 ;;		Unchanged: 0/0
  1125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1130 ;;Total ram usage:        0 bytes
  1131 ;; Hardware stack levels used: 1
  1132 ;; Hardware stack levels required when called: 5
  1133 ;; This function calls:
  1134 ;;		_TMR2_SetInterruptHandler
  1135 ;; This function is called by:
  1136 ;;		_SYSTEM_Initialize
  1137 ;; This function uses a non-reentrant model
  1138 ;;
  1139                           
  1140                           	psect	text8
  1141   001386                     __ptext8:
  1142                           	callstack 0
  1143   001386                     _TMR2_Initialize:
  1144                           	callstack 24
  1145   001386                     
  1146                           ;mcc_generated_files/tmr2.c: 69:     PR2 = 0x9B;
  1147   001386  0E9B               	movlw	155
  1148   001388  6ECB               	movwf	203,c	;volatile
  1149                           
  1150                           ;mcc_generated_files/tmr2.c: 72:     TMR2 = 0x00;
  1151   00138A  0E00               	movlw	0
  1152   00138C  6ECC               	movwf	204,c	;volatile
  1153   00138E                     
  1154                           ;mcc_generated_files/tmr2.c: 75:     PIR1bits.TMR2IF = 0;
  1155   00138E  929E               	bcf	158,1,c	;volatile
  1156   001390                     
  1157                           ;mcc_generated_files/tmr2.c: 78:     PIE1bits.TMR2IE = 1;
  1158   001390  829D               	bsf	157,1,c	;volatile
  1159   001392                     
  1160                           ;mcc_generated_files/tmr2.c: 81:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
  1161   001392  0E68               	movlw	low _TMR2_DefaultInterruptHandler
  1162   001394  6E2C               	movwf	TMR2_SetInterruptHandler@InterruptHandler^0,c
  1163   001396  0E14               	movlw	high _TMR2_DefaultInterruptHandler
  1164   001398  6E2D               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)^0,c
  1165   00139A  EC0E  F00A         	call	_TMR2_SetInterruptHandler	;wreg free
  1166   00139E                     
  1167                           ;mcc_generated_files/tmr2.c: 84:     T2CON = 0x06;
  1168   00139E  0E06               	movlw	6
  1169   0013A0  6ECA               	movwf	202,c	;volatile
  1170   0013A2  0012               	return		;funcret
  1171   0013A4                     __end_of_TMR2_Initialize:
  1172                           	callstack 0
  1173                           
  1174 ;; *************** function _TMR2_SetInterruptHandler *****************
  1175 ;; Defined at:
  1176 ;;		line 132 in file "mcc_generated_files/tmr2.c"
  1177 ;; Parameters:    Size  Location     Type
  1178 ;;  InterruptHan    2    4[COMRAM] PTR FTN()void 
  1179 ;;		 -> TMR2_DefaultInterruptHandler(1), 
  1180 ;; Auto vars:     Size  Location     Type
  1181 ;;		None
  1182 ;; Return value:  Size  Location     Type
  1183 ;;                  1    wreg      void 
  1184 ;; Registers used:
  1185 ;;		wreg, status,2, status,0
  1186 ;; Tracked objects:
  1187 ;;		On entry : 0/0
  1188 ;;		On exit  : 0/0
  1189 ;;		Unchanged: 0/0
  1190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1191 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1194 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1195 ;;Total ram usage:        2 bytes
  1196 ;; Hardware stack levels used: 1
  1197 ;; Hardware stack levels required when called: 4
  1198 ;; This function calls:
  1199 ;;		Nothing
  1200 ;; This function is called by:
  1201 ;;		_TMR2_Initialize
  1202 ;; This function uses a non-reentrant model
  1203 ;;
  1204                           
  1205                           	psect	text9
  1206   00141C                     __ptext9:
  1207                           	callstack 0
  1208   00141C                     _TMR2_SetInterruptHandler:
  1209                           	callstack 24
  1210   00141C                     
  1211                           ;mcc_generated_files/tmr2.c: 133:     TMR2_InterruptHandler = InterruptHandler;
  1212   00141C  C02C  F045         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
  1213   001420  C02D  F046         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
  1214   001424  0012               	return		;funcret
  1215   001426                     __end_of_TMR2_SetInterruptHandler:
  1216                           	callstack 0
  1217                           
  1218 ;; *************** function _PWM2_Initialize *****************
  1219 ;; Defined at:
  1220 ;;		line 64 in file "mcc_generated_files/pwm2.c"
  1221 ;; Parameters:    Size  Location     Type
  1222 ;;		None
  1223 ;; Auto vars:     Size  Location     Type
  1224 ;;		None
  1225 ;; Return value:  Size  Location     Type
  1226 ;;                  1    wreg      void 
  1227 ;; Registers used:
  1228 ;;		wreg, status,2
  1229 ;; Tracked objects:
  1230 ;;		On entry : 0/0
  1231 ;;		On exit  : 0/0
  1232 ;;		Unchanged: 0/0
  1233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1237 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1238 ;;Total ram usage:        0 bytes
  1239 ;; Hardware stack levels used: 1
  1240 ;; Hardware stack levels required when called: 4
  1241 ;; This function calls:
  1242 ;;		Nothing
  1243 ;; This function is called by:
  1244 ;;		_SYSTEM_Initialize
  1245 ;; This function uses a non-reentrant model
  1246 ;;
  1247                           
  1248                           	psect	text10
  1249   0013EE                     __ptext10:
  1250                           	callstack 0
  1251   0013EE                     _PWM2_Initialize:
  1252                           	callstack 25
  1253   0013EE                     
  1254                           ;mcc_generated_files/pwm2.c: 69:  CCP2CON = 0x0C;
  1255   0013EE  0E0C               	movlw	12
  1256   0013F0  010F               	movlb	15	; () banked
  1257   0013F2  6F50               	movwf	80,b	;volatile
  1258                           
  1259                           ;mcc_generated_files/pwm2.c: 72:  CCPR2L = 0x00;
  1260   0013F4  0E00               	movlw	0
  1261   0013F6  6F51               	movwf	81,b	;volatile
  1262                           
  1263                           ;mcc_generated_files/pwm2.c: 75:  CCPR2H = 0x00;
  1264   0013F8  0E00               	movlw	0
  1265   0013FA  6F52               	movwf	82,b	;volatile
  1266   0013FC                     
  1267                           ; BSR set to: 15
  1268                           ;mcc_generated_files/pwm2.c: 78:  CCPTMRSbits.C2TSEL = 0x0;
  1269   0013FC  9299               	bcf	153,1,c	;volatile
  1270   0013FE                     
  1271                           ; BSR set to: 15
  1272   0013FE  0012               	return		;funcret
  1273   001400                     __end_of_PWM2_Initialize:
  1274                           	callstack 0
  1275                           
  1276 ;; *************** function _PIN_MANAGER_Initialize *****************
  1277 ;; Defined at:
  1278 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1279 ;; Parameters:    Size  Location     Type
  1280 ;;		None
  1281 ;; Auto vars:     Size  Location     Type
  1282 ;;		None
  1283 ;; Return value:  Size  Location     Type
  1284 ;;                  1    wreg      void 
  1285 ;; Registers used:
  1286 ;;		wreg, status,2
  1287 ;; Tracked objects:
  1288 ;;		On entry : 0/0
  1289 ;;		On exit  : 0/0
  1290 ;;		Unchanged: 0/0
  1291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1295 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1296 ;;Total ram usage:        0 bytes
  1297 ;; Hardware stack levels used: 1
  1298 ;; Hardware stack levels required when called: 4
  1299 ;; This function calls:
  1300 ;;		Nothing
  1301 ;; This function is called by:
  1302 ;;		_SYSTEM_Initialize
  1303 ;; This function uses a non-reentrant model
  1304 ;;
  1305                           
  1306                           	psect	text11
  1307   001312                     __ptext11:
  1308                           	callstack 0
  1309   001312                     _PIN_MANAGER_Initialize:
  1310                           	callstack 25
  1311   001312                     
  1312                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  1313   001312  0E00               	movlw	0
  1314   001314  6E89               	movwf	137,c	;volatile
  1315                           
  1316                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  1317   001316  0E00               	movlw	0
  1318   001318  6E8A               	movwf	138,c	;volatile
  1319                           
  1320                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  1321   00131A  0E00               	movlw	0
  1322   00131C  6E8B               	movwf	139,c	;volatile
  1323                           
  1324                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xEF;
  1325   00131E  0EEF               	movlw	239
  1326   001320  6E92               	movwf	146,c	;volatile
  1327   001322                     
  1328                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFF;
  1329   001322  6893               	setf	147,c	;volatile
  1330                           
  1331                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xBB;
  1332   001324  0EBB               	movlw	187
  1333   001326  6E94               	movwf	148,c	;volatile
  1334                           
  1335                           ;mcc_generated_files/pin_manager.c: 74:     ANCON0 = 0x1F;
  1336   001328  0E1F               	movlw	31
  1337   00132A  010F               	movlb	15	; () banked
  1338   00132C  6F5D               	movwf	93,b	;volatile
  1339                           
  1340                           ;mcc_generated_files/pin_manager.c: 75:     ANCON1 = 0x07;
  1341   00132E  0E07               	movlw	7
  1342   001330  6F5C               	movwf	92,b	;volatile
  1343                           
  1344                           ;mcc_generated_files/pin_manager.c: 80:     WPUB = 0x00;
  1345   001332  0E00               	movlw	0
  1346   001334  6F5B               	movwf	91,b	;volatile
  1347   001336                     
  1348                           ; BSR set to: 15
  1349                           ;mcc_generated_files/pin_manager.c: 81:     INTCON2bits.nRBPU = 1;
  1350   001336  8EF1               	bsf	241,7,c	;volatile
  1351   001338                     
  1352                           ; BSR set to: 15
  1353   001338  0012               	return		;funcret
  1354   00133A                     __end_of_PIN_MANAGER_Initialize:
  1355                           	callstack 0
  1356                           
  1357 ;; *************** function _OSCILLATOR_Initialize *****************
  1358 ;; Defined at:
  1359 ;;		line 61 in file "mcc_generated_files/mcc.c"
  1360 ;; Parameters:    Size  Location     Type
  1361 ;;		None
  1362 ;; Auto vars:     Size  Location     Type
  1363 ;;		None
  1364 ;; Return value:  Size  Location     Type
  1365 ;;                  1    wreg      void 
  1366 ;; Registers used:
  1367 ;;		wreg, status,2
  1368 ;; Tracked objects:
  1369 ;;		On entry : 0/0
  1370 ;;		On exit  : 0/0
  1371 ;;		Unchanged: 0/0
  1372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1377 ;;Total ram usage:        0 bytes
  1378 ;; Hardware stack levels used: 1
  1379 ;; Hardware stack levels required when called: 4
  1380 ;; This function calls:
  1381 ;;		Nothing
  1382 ;; This function is called by:
  1383 ;;		_SYSTEM_Initialize
  1384 ;; This function uses a non-reentrant model
  1385 ;;
  1386                           
  1387                           	psect	text12
  1388   001400                     __ptext12:
  1389                           	callstack 0
  1390   001400                     _OSCILLATOR_Initialize:
  1391                           	callstack 25
  1392   001400                     
  1393                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x20;
  1394   001400  0E20               	movlw	32
  1395   001402  6ED3               	movwf	211,c	;volatile
  1396                           
  1397                           ;mcc_generated_files/mcc.c: 66:     OSCCON2 = 0x00;
  1398   001404  0E00               	movlw	0
  1399   001406  6ED2               	movwf	210,c	;volatile
  1400                           
  1401                           ;mcc_generated_files/mcc.c: 68:     OSCTUNE = 0x00;
  1402   001408  0E00               	movlw	0
  1403   00140A  6E9B               	movwf	155,c	;volatile
  1404                           
  1405                           ;mcc_generated_files/mcc.c: 70:     REFOCON = 0x00;
  1406   00140C  0E00               	movlw	0
  1407   00140E  6E9A               	movwf	154,c	;volatile
  1408   001410  0012               	return		;funcret
  1409   001412                     __end_of_OSCILLATOR_Initialize:
  1410                           	callstack 0
  1411                           
  1412 ;; *************** function _INTERRUPT_Initialize *****************
  1413 ;; Defined at:
  1414 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  1415 ;; Parameters:    Size  Location     Type
  1416 ;;		None
  1417 ;; Auto vars:     Size  Location     Type
  1418 ;;		None
  1419 ;; Return value:  Size  Location     Type
  1420 ;;                  1    wreg      void 
  1421 ;; Registers used:
  1422 ;;		None
  1423 ;; Tracked objects:
  1424 ;;		On entry : 0/0
  1425 ;;		On exit  : 0/0
  1426 ;;		Unchanged: 0/0
  1427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1431 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1432 ;;Total ram usage:        0 bytes
  1433 ;; Hardware stack levels used: 1
  1434 ;; Hardware stack levels required when called: 4
  1435 ;; This function calls:
  1436 ;;		Nothing
  1437 ;; This function is called by:
  1438 ;;		_SYSTEM_Initialize
  1439 ;; This function uses a non-reentrant model
  1440 ;;
  1441                           
  1442                           	psect	text13
  1443   001464                     __ptext13:
  1444                           	callstack 0
  1445   001464                     _INTERRUPT_Initialize:
  1446                           	callstack 25
  1447   001464                     
  1448                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  1449   001464  9ED0               	bcf	208,7,c	;volatile
  1450   001466  0012               	return		;funcret
  1451   001468                     __end_of_INTERRUPT_Initialize:
  1452                           	callstack 0
  1453                           
  1454 ;; *************** function _EUSART1_Initialize *****************
  1455 ;; Defined at:
  1456 ;;		line 88 in file "mcc_generated_files/eusart1.c"
  1457 ;; Parameters:    Size  Location     Type
  1458 ;;		None
  1459 ;; Auto vars:     Size  Location     Type
  1460 ;;		None
  1461 ;; Return value:  Size  Location     Type
  1462 ;;                  1    wreg      void 
  1463 ;; Registers used:
  1464 ;;		wreg, status,2, status,0, cstack
  1465 ;; Tracked objects:
  1466 ;;		On entry : 0/0
  1467 ;;		On exit  : 0/0
  1468 ;;		Unchanged: 0/0
  1469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1474 ;;Total ram usage:        0 bytes
  1475 ;; Hardware stack levels used: 1
  1476 ;; Hardware stack levels required when called: 5
  1477 ;; This function calls:
  1478 ;;		_EUSART1_SetErrorHandler
  1479 ;;		_EUSART1_SetFramingErrorHandler
  1480 ;;		_EUSART1_SetOverrunErrorHandler
  1481 ;;		_EUSART1_SetRxInterruptHandler
  1482 ;;		_EUSART1_SetTxInterruptHandler
  1483 ;; This function is called by:
  1484 ;;		_SYSTEM_Initialize
  1485 ;; This function uses a non-reentrant model
  1486 ;;
  1487                           
  1488                           	psect	text14
  1489   00115E                     __ptext14:
  1490                           	callstack 0
  1491   00115E                     _EUSART1_Initialize:
  1492                           	callstack 24
  1493   00115E                     
  1494                           ;mcc_generated_files/eusart1.c: 91:     PIE1bits.RC1IE = 0;
  1495   00115E  9A9D               	bcf	157,5,c	;volatile
  1496   001160                     
  1497                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  1498   001160  0EB4               	movlw	low _EUSART1_Receive_ISR
  1499   001162  6E2C               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler^0,c
  1500   001164  0E10               	movlw	high _EUSART1_Receive_ISR
  1501   001166  6E2D               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)^0,c
  1502   001168  EC18  F00A         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  1503   00116C                     
  1504                           ;mcc_generated_files/eusart1.c: 93:     PIE1bits.TX1IE = 0;
  1505   00116C  989D               	bcf	157,4,c	;volatile
  1506                           
  1507                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
  1508   00116E  0EA6               	movlw	low _EUSART1_Transmit_ISR
  1509   001170  6E2C               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler^0,c
  1510   001172  0E12               	movlw	high _EUSART1_Transmit_ISR
  1511   001174  6E2D               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+1)^0,c
  1512   001176  EC13  F00A         	call	_EUSART1_SetTxInterruptHandler	;wreg free
  1513   00117A                     
  1514                           ;mcc_generated_files/eusart1.c: 98:     BAUDCON1 = 0x08;
  1515   00117A  0E08               	movlw	8
  1516   00117C  6EA7               	movwf	167,c	;volatile
  1517   00117E                     
  1518                           ;mcc_generated_files/eusart1.c: 101:     RCSTA1 = 0x90;
  1519   00117E  0E90               	movlw	144
  1520   001180  6EAB               	movwf	171,c	;volatile
  1521   001182                     
  1522                           ;mcc_generated_files/eusart1.c: 104:     TXSTA1 = 0x24;
  1523   001182  0E24               	movlw	36
  1524   001184  6EAC               	movwf	172,c	;volatile
  1525   001186                     
  1526                           ;mcc_generated_files/eusart1.c: 107:     SPBRG1 = 0x0C;
  1527   001186  0E0C               	movlw	12
  1528   001188  6EAF               	movwf	175,c	;volatile
  1529   00118A                     
  1530                           ;mcc_generated_files/eusart1.c: 110:     SPBRGH1 = 0x00;
  1531   00118A  0E00               	movlw	0
  1532   00118C  6E7D               	movwf	125,c	;volatile
  1533   00118E                     
  1534                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  1535   00118E  0E6A               	movlw	low _EUSART1_DefaultFramingErrorHandler
  1536   001190  6E2C               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  1537   001192  0E14               	movlw	high _EUSART1_DefaultFramingErrorHandler
  1538   001194  6E2D               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  1539   001196  EC22  F00A         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  1540   00119A                     
  1541                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  1542   00119A  0E58               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  1543   00119C  6E2C               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  1544   00119E  0E14               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  1545   0011A0  6E2D               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  1546   0011A2  EC1D  F00A         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  1547   0011A6                     
  1548                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  1549   0011A6  0E5E               	movlw	low _EUSART1_DefaultErrorHandler
  1550   0011A8  6E2C               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  1551   0011AA  0E14               	movlw	high _EUSART1_DefaultErrorHandler
  1552   0011AC  6E2D               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  1553   0011AE  EC27  F00A         	call	_EUSART1_SetErrorHandler	;wreg free
  1554                           
  1555                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
  1556   0011B2  0E00               	movlw	0
  1557   0011B4  6E21               	movwf	_eusart1RxLastError^0,c	;volatile
  1558                           
  1559                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
  1560   0011B6  0E00               	movlw	0
  1561   0011B8  6E27               	movwf	_eusart1TxHead^0,c	;volatile
  1562                           
  1563                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
  1564   0011BA  0E00               	movlw	0
  1565   0011BC  6E26               	movwf	_eusart1TxTail^0,c	;volatile
  1566                           
  1567                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
  1568   0011BE  0E08               	movlw	8
  1569   0011C0  6E25               	movwf	_eusart1TxBufferRemaining^0,c	;volatile
  1570                           
  1571                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
  1572   0011C2  0E00               	movlw	0
  1573   0011C4  6E24               	movwf	_eusart1RxHead^0,c	;volatile
  1574                           
  1575                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
  1576   0011C6  0E00               	movlw	0
  1577   0011C8  6E23               	movwf	_eusart1RxTail^0,c	;volatile
  1578                           
  1579                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
  1580   0011CA  0E00               	movlw	0
  1581   0011CC  6E22               	movwf	_eusart1RxCount^0,c	;volatile
  1582   0011CE                     
  1583                           ;mcc_generated_files/eusart1.c: 129:     PIE1bits.RC1IE = 1;
  1584   0011CE  8A9D               	bsf	157,5,c	;volatile
  1585   0011D0  0012               	return		;funcret
  1586   0011D2                     __end_of_EUSART1_Initialize:
  1587                           	callstack 0
  1588                           
  1589 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  1590 ;; Defined at:
  1591 ;;		line 281 in file "mcc_generated_files/eusart1.c"
  1592 ;; Parameters:    Size  Location     Type
  1593 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  1594 ;;		 -> EUSART1_Transmit_ISR(1), 
  1595 ;; Auto vars:     Size  Location     Type
  1596 ;;		None
  1597 ;; Return value:  Size  Location     Type
  1598 ;;                  1    wreg      void 
  1599 ;; Registers used:
  1600 ;;		wreg, status,2, status,0
  1601 ;; Tracked objects:
  1602 ;;		On entry : 0/0
  1603 ;;		On exit  : 0/0
  1604 ;;		Unchanged: 0/0
  1605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1606 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1609 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1610 ;;Total ram usage:        2 bytes
  1611 ;; Hardware stack levels used: 1
  1612 ;; Hardware stack levels required when called: 4
  1613 ;; This function calls:
  1614 ;;		Nothing
  1615 ;; This function is called by:
  1616 ;;		_EUSART1_Initialize
  1617 ;; This function uses a non-reentrant model
  1618 ;;
  1619                           
  1620                           	psect	text15
  1621   001426                     __ptext15:
  1622                           	callstack 0
  1623   001426                     _EUSART1_SetTxInterruptHandler:
  1624                           	callstack 24
  1625   001426                     
  1626                           ;mcc_generated_files/eusart1.c: 282:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  1627   001426  C02C  F04F         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
  1628   00142A  C02D  F050         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
  1629   00142E  0012               	return		;funcret
  1630   001430                     __end_of_EUSART1_SetTxInterruptHandler:
  1631                           	callstack 0
  1632                           
  1633 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  1634 ;; Defined at:
  1635 ;;		line 285 in file "mcc_generated_files/eusart1.c"
  1636 ;; Parameters:    Size  Location     Type
  1637 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  1638 ;;		 -> EUSART1_Receive_ISR(1), 
  1639 ;; Auto vars:     Size  Location     Type
  1640 ;;		None
  1641 ;; Return value:  Size  Location     Type
  1642 ;;                  1    wreg      void 
  1643 ;; Registers used:
  1644 ;;		wreg, status,2, status,0
  1645 ;; Tracked objects:
  1646 ;;		On entry : 0/0
  1647 ;;		On exit  : 0/0
  1648 ;;		Unchanged: 0/0
  1649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1650 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1653 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1654 ;;Total ram usage:        2 bytes
  1655 ;; Hardware stack levels used: 1
  1656 ;; Hardware stack levels required when called: 4
  1657 ;; This function calls:
  1658 ;;		Nothing
  1659 ;; This function is called by:
  1660 ;;		_EUSART1_Initialize
  1661 ;; This function uses a non-reentrant model
  1662 ;;
  1663                           
  1664                           	psect	text16
  1665   001430                     __ptext16:
  1666                           	callstack 0
  1667   001430                     _EUSART1_SetRxInterruptHandler:
  1668                           	callstack 24
  1669   001430                     
  1670                           ;mcc_generated_files/eusart1.c: 286:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  1671   001430  C02C  F04D         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
  1672   001434  C02D  F04E         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
  1673   001438  0012               	return		;funcret
  1674   00143A                     __end_of_EUSART1_SetRxInterruptHandler:
  1675                           	callstack 0
  1676                           
  1677 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  1678 ;; Defined at:
  1679 ;;		line 273 in file "mcc_generated_files/eusart1.c"
  1680 ;; Parameters:    Size  Location     Type
  1681 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  1682 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  1683 ;; Auto vars:     Size  Location     Type
  1684 ;;		None
  1685 ;; Return value:  Size  Location     Type
  1686 ;;                  1    wreg      void 
  1687 ;; Registers used:
  1688 ;;		wreg, status,2, status,0
  1689 ;; Tracked objects:
  1690 ;;		On entry : 0/0
  1691 ;;		On exit  : 0/0
  1692 ;;		Unchanged: 0/0
  1693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1694 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1697 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1698 ;;Total ram usage:        2 bytes
  1699 ;; Hardware stack levels used: 1
  1700 ;; Hardware stack levels required when called: 4
  1701 ;; This function calls:
  1702 ;;		Nothing
  1703 ;; This function is called by:
  1704 ;;		_EUSART1_Initialize
  1705 ;; This function uses a non-reentrant model
  1706 ;;
  1707                           
  1708                           	psect	text17
  1709   00143A                     __ptext17:
  1710                           	callstack 0
  1711   00143A                     _EUSART1_SetOverrunErrorHandler:
  1712                           	callstack 24
  1713   00143A                     
  1714                           ;mcc_generated_files/eusart1.c: 274:     EUSART1_OverrunErrorHandler = interruptHandler;
  1715   00143A  C02C  F049         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  1716   00143E  C02D  F04A         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  1717   001442  0012               	return		;funcret
  1718   001444                     __end_of_EUSART1_SetOverrunErrorHandler:
  1719                           	callstack 0
  1720                           
  1721 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  1722 ;; Defined at:
  1723 ;;		line 269 in file "mcc_generated_files/eusart1.c"
  1724 ;; Parameters:    Size  Location     Type
  1725 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  1726 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  1727 ;; Auto vars:     Size  Location     Type
  1728 ;;		None
  1729 ;; Return value:  Size  Location     Type
  1730 ;;                  1    wreg      void 
  1731 ;; Registers used:
  1732 ;;		wreg, status,2, status,0
  1733 ;; Tracked objects:
  1734 ;;		On entry : 0/0
  1735 ;;		On exit  : 0/0
  1736 ;;		Unchanged: 0/0
  1737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1738 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1741 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1742 ;;Total ram usage:        2 bytes
  1743 ;; Hardware stack levels used: 1
  1744 ;; Hardware stack levels required when called: 4
  1745 ;; This function calls:
  1746 ;;		Nothing
  1747 ;; This function is called by:
  1748 ;;		_EUSART1_Initialize
  1749 ;; This function uses a non-reentrant model
  1750 ;;
  1751                           
  1752                           	psect	text18
  1753   001444                     __ptext18:
  1754                           	callstack 0
  1755   001444                     _EUSART1_SetFramingErrorHandler:
  1756                           	callstack 24
  1757   001444                     
  1758                           ;mcc_generated_files/eusart1.c: 270:     EUSART1_FramingErrorHandler = interruptHandler;
  1759   001444  C02C  F04B         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  1760   001448  C02D  F04C         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  1761   00144C  0012               	return		;funcret
  1762   00144E                     __end_of_EUSART1_SetFramingErrorHandler:
  1763                           	callstack 0
  1764                           
  1765 ;; *************** function _EUSART1_SetErrorHandler *****************
  1766 ;; Defined at:
  1767 ;;		line 277 in file "mcc_generated_files/eusart1.c"
  1768 ;; Parameters:    Size  Location     Type
  1769 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  1770 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  1771 ;; Auto vars:     Size  Location     Type
  1772 ;;		None
  1773 ;; Return value:  Size  Location     Type
  1774 ;;                  1    wreg      void 
  1775 ;; Registers used:
  1776 ;;		wreg, status,2, status,0
  1777 ;; Tracked objects:
  1778 ;;		On entry : 0/0
  1779 ;;		On exit  : 0/0
  1780 ;;		Unchanged: 0/0
  1781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1782 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1785 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1786 ;;Total ram usage:        2 bytes
  1787 ;; Hardware stack levels used: 1
  1788 ;; Hardware stack levels required when called: 4
  1789 ;; This function calls:
  1790 ;;		Nothing
  1791 ;; This function is called by:
  1792 ;;		_EUSART1_Initialize
  1793 ;; This function uses a non-reentrant model
  1794 ;;
  1795                           
  1796                           	psect	text19
  1797   00144E                     __ptext19:
  1798                           	callstack 0
  1799   00144E                     _EUSART1_SetErrorHandler:
  1800                           	callstack 24
  1801   00144E                     
  1802                           ;mcc_generated_files/eusart1.c: 278:     EUSART1_ErrorHandler = interruptHandler;
  1803   00144E  C02C  F047         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  1804   001452  C02D  F048         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  1805   001456  0012               	return		;funcret
  1806   001458                     __end_of_EUSART1_SetErrorHandler:
  1807                           	callstack 0
  1808                           
  1809 ;; *************** function _EUSART1_is_rx_ready *****************
  1810 ;; Defined at:
  1811 ;;		line 137 in file "mcc_generated_files/eusart1.c"
  1812 ;; Parameters:    Size  Location     Type
  1813 ;;		None
  1814 ;; Auto vars:     Size  Location     Type
  1815 ;;		None
  1816 ;; Return value:  Size  Location     Type
  1817 ;;                  1    wreg      _Bool 
  1818 ;; Registers used:
  1819 ;;		wreg, status,2
  1820 ;; Tracked objects:
  1821 ;;		On entry : 0/0
  1822 ;;		On exit  : 0/0
  1823 ;;		Unchanged: 0/0
  1824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1828 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1829 ;;Total ram usage:        0 bytes
  1830 ;; Hardware stack levels used: 1
  1831 ;; Hardware stack levels required when called: 4
  1832 ;; This function calls:
  1833 ;;		Nothing
  1834 ;; This function is called by:
  1835 ;;		_main
  1836 ;; This function uses a non-reentrant model
  1837 ;;
  1838                           
  1839                           	psect	text20
  1840   0013D8                     __ptext20:
  1841                           	callstack 0
  1842   0013D8                     _EUSART1_is_rx_ready:
  1843                           	callstack 26
  1844   0013D8                     
  1845                           ;mcc_generated_files/eusart1.c: 139:     return (eusart1RxCount ? 1 : 0);
  1846   0013D8  5022               	movf	_eusart1RxCount^0,w,c	;volatile
  1847   0013DA  A4D8               	btfss	status,2,c
  1848   0013DC  EFF2  F009         	goto	u121
  1849   0013E0  EFF5  F009         	goto	u120
  1850   0013E4                     u121:
  1851   0013E4  0E01               	movlw	1
  1852   0013E6  EFF6  F009         	goto	u130
  1853   0013EA                     u120:
  1854   0013EA  0E00               	movlw	0
  1855   0013EC                     u130:
  1856   0013EC  0012               	return		;funcret
  1857   0013EE                     __end_of_EUSART1_is_rx_ready:
  1858                           	callstack 0
  1859                           
  1860 ;; *************** function _INTERRUPT_InterruptManager *****************
  1861 ;; Defined at:
  1862 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  1863 ;; Parameters:    Size  Location     Type
  1864 ;;		None
  1865 ;; Auto vars:     Size  Location     Type
  1866 ;;		None
  1867 ;; Return value:  Size  Location     Type
  1868 ;;                  1    wreg      void 
  1869 ;; Registers used:
  1870 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  1871 ;; Tracked objects:
  1872 ;;		On entry : 0/0
  1873 ;;		On exit  : 0/0
  1874 ;;		Unchanged: 0/0
  1875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1878 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1879 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1880 ;;Total ram usage:        4 bytes
  1881 ;; Hardware stack levels used: 1
  1882 ;; Hardware stack levels required when called: 3
  1883 ;; This function calls:
  1884 ;;		NULL
  1885 ;;		_EUSART1_Receive_ISR
  1886 ;;		_EUSART1_Transmit_ISR
  1887 ;;		_TMR2_ISR
  1888 ;; This function is called by:
  1889 ;;		Interrupt level 2
  1890 ;; This function uses a non-reentrant model
  1891 ;;
  1892                           
  1893                           	psect	intcode
  1894   000008                     __pintcode:
  1895                           	callstack 0
  1896   000008                     _INTERRUPT_InterruptManager:
  1897                           	callstack 21
  1898                           
  1899                           ;incstack = 0
  1900   000008  8251               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1901   00000A  CFFA F028          	movff	pclath,??_INTERRUPT_InterruptManager
  1902   00000E  CFFB F029          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  1903   000012  CFD9 F02A          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  1904   000016  CFDA F02B          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  1905   00001A                     
  1906                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
  1907   00001A  ACF2               	btfss	242,6,c	;volatile
  1908   00001C  EF12  F000         	goto	i2u26_41
  1909   000020  EF14  F000         	goto	i2u26_40
  1910   000024                     i2u26_41:
  1911   000024  EF60  F000         	goto	i2l231
  1912   000028                     i2u26_40:
  1913   000028                     
  1914                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
  1915   000028  A89D               	btfss	157,4,c	;volatile
  1916   00002A  EF19  F000         	goto	i2u27_41
  1917   00002E  EF1B  F000         	goto	i2u27_40
  1918   000032                     i2u27_41:
  1919   000032  EF31  F000         	goto	i2l224
  1920   000036                     i2u27_40:
  1921   000036  A89E               	btfss	158,4,c	;volatile
  1922   000038  EF20  F000         	goto	i2u28_41
  1923   00003C  EF22  F000         	goto	i2u28_40
  1924   000040                     i2u28_41:
  1925   000040  EF31  F000         	goto	i2l224
  1926   000044                     i2u28_40:
  1927   000044                     
  1928                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             EUSART1_TxDefaultInterruptHandler();
  1929   000044  D802               	call	i2u29_48
  1930   000046  EF2F  F000         	goto	i2u29_49
  1931   00004A                     i2u29_48:
  1932   00004A  0005               	push	
  1933   00004C  6EFA               	movwf	pclath,c
  1934   00004E  504F               	movf	_EUSART1_TxDefaultInterruptHandler^0,w,c
  1935   000050  6EFD               	movwf	tosl,c
  1936   000052  5050               	movf	(_EUSART1_TxDefaultInterruptHandler+1)^0,w,c
  1937   000054  6EFE               	movwf	tosh,c
  1938   000056  50F8               	movf	tblptru,w,c
  1939   000058  6EFF               	movwf	tosu,c
  1940   00005A  50FA               	movf	pclath,w,c
  1941   00005C  0012               	return		;indir
  1942   00005E                     i2u29_49:
  1943                           
  1944                           ;mcc_generated_files/interrupt_manager.c: 66:         }
  1945   00005E  EF60  F000         	goto	i2l231
  1946   000062                     i2l224:
  1947   000062  AA9D               	btfss	157,5,c	;volatile
  1948   000064  EF36  F000         	goto	i2u30_41
  1949   000068  EF38  F000         	goto	i2u30_40
  1950   00006C                     i2u30_41:
  1951   00006C  EF4E  F000         	goto	i2l226
  1952   000070                     i2u30_40:
  1953   000070  AA9E               	btfss	158,5,c	;volatile
  1954   000072  EF3D  F000         	goto	i2u31_41
  1955   000076  EF3F  F000         	goto	i2u31_40
  1956   00007A                     i2u31_41:
  1957   00007A  EF4E  F000         	goto	i2l226
  1958   00007E                     i2u31_40:
  1959   00007E                     
  1960                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART1_RxDefaultInterruptHandler();
  1961   00007E  D802               	call	i2u32_48
  1962   000080  EF4C  F000         	goto	i2u32_49
  1963   000084                     i2u32_48:
  1964   000084  0005               	push	
  1965   000086  6EFA               	movwf	pclath,c
  1966   000088  504D               	movf	_EUSART1_RxDefaultInterruptHandler^0,w,c
  1967   00008A  6EFD               	movwf	tosl,c
  1968   00008C  504E               	movf	(_EUSART1_RxDefaultInterruptHandler+1)^0,w,c
  1969   00008E  6EFE               	movwf	tosh,c
  1970   000090  50F8               	movf	tblptru,w,c
  1971   000092  6EFF               	movwf	tosu,c
  1972   000094  50FA               	movf	pclath,w,c
  1973   000096  0012               	return		;indir
  1974   000098                     i2u32_49:
  1975                           
  1976                           ;mcc_generated_files/interrupt_manager.c: 70:         }
  1977   000098  EF60  F000         	goto	i2l231
  1978   00009C                     i2l226:
  1979   00009C  A29D               	btfss	157,1,c	;volatile
  1980   00009E  EF53  F000         	goto	i2u33_41
  1981   0000A2  EF55  F000         	goto	i2u33_40
  1982   0000A6                     i2u33_41:
  1983   0000A6  EF60  F000         	goto	i2l225
  1984   0000AA                     i2u33_40:
  1985   0000AA  A29E               	btfss	158,1,c	;volatile
  1986   0000AC  EF5A  F000         	goto	i2u34_41
  1987   0000B0  EF5C  F000         	goto	i2u34_40
  1988   0000B4                     i2u34_41:
  1989   0000B4  EF60  F000         	goto	i2l225
  1990   0000B8                     i2u34_40:
  1991   0000B8                     
  1992                           ;mcc_generated_files/interrupt_manager.c: 72:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 73:             TMR2_ISR();
  1993   0000B8  EC71  F009         	call	_TMR2_ISR	;wreg free
  1994                           
  1995                           ;mcc_generated_files/interrupt_manager.c: 74:         }
  1996   0000BC  EF60  F000         	goto	i2l231
  1997   0000C0                     i2l225:
  1998   0000C0                     i2l231:
  1999   0000C0  C02B  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  2000   0000C4  C02A  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  2001   0000C8  C029  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  2002   0000CC  C028  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  2003   0000D0  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2004   0000D2  0011               	retfie		f
  2005   0000D4                     __end_of_INTERRUPT_InterruptManager:
  2006                           	callstack 0
  2007                           
  2008 ;; *************** function _TMR2_ISR *****************
  2009 ;; Defined at:
  2010 ;;		line 119 in file "mcc_generated_files/tmr2.c"
  2011 ;; Parameters:    Size  Location     Type
  2012 ;;		None
  2013 ;; Auto vars:     Size  Location     Type
  2014 ;;		None
  2015 ;; Return value:  Size  Location     Type
  2016 ;;                  1    wreg      void 
  2017 ;; Registers used:
  2018 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  2019 ;; Tracked objects:
  2020 ;;		On entry : 0/0
  2021 ;;		On exit  : 0/0
  2022 ;;		Unchanged: 0/0
  2023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2027 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2028 ;;Total ram usage:        0 bytes
  2029 ;; Hardware stack levels used: 1
  2030 ;; Hardware stack levels required when called: 1
  2031 ;; This function calls:
  2032 ;;		NULL
  2033 ;;		_TMR2_DefaultInterruptHandler
  2034 ;; This function is called by:
  2035 ;;		_INTERRUPT_InterruptManager
  2036 ;; This function uses a non-reentrant model
  2037 ;;
  2038                           
  2039                           	psect	text22
  2040   0012E2                     __ptext22:
  2041                           	callstack 0
  2042   0012E2                     _TMR2_ISR:
  2043                           	callstack 22
  2044   0012E2                     
  2045                           ;mcc_generated_files/tmr2.c: 123:     PIR1bits.TMR2IF = 0;
  2046   0012E2  929E               	bcf	158,1,c	;volatile
  2047   0012E4                     
  2048                           ;mcc_generated_files/tmr2.c: 125:     if(TMR2_InterruptHandler)
  2049   0012E4  5045               	movf	_TMR2_InterruptHandler^0,w,c
  2050   0012E6  1046               	iorwf	(_TMR2_InterruptHandler+1)^0,w,c
  2051   0012E8  B4D8               	btfsc	status,2,c
  2052   0012EA  EF79  F009         	goto	i2u22_41
  2053   0012EE  EF7B  F009         	goto	i2u22_40
  2054   0012F2                     i2u22_41:
  2055   0012F2  EF88  F009         	goto	i2l271
  2056   0012F6                     i2u22_40:
  2057   0012F6                     
  2058                           ;mcc_generated_files/tmr2.c: 126:     {;mcc_generated_files/tmr2.c: 127:         TMR2_In
      +                          terruptHandler();
  2059   0012F6  D802               	call	i2u23_48
  2060   0012F8  EF88  F009         	goto	i2u23_49
  2061   0012FC                     i2u23_48:
  2062   0012FC  0005               	push	
  2063   0012FE  6EFA               	movwf	pclath,c
  2064   001300  5045               	movf	_TMR2_InterruptHandler^0,w,c
  2065   001302  6EFD               	movwf	tosl,c
  2066   001304  5046               	movf	(_TMR2_InterruptHandler+1)^0,w,c
  2067   001306  6EFE               	movwf	tosh,c
  2068   001308  50F8               	movf	tblptru,w,c
  2069   00130A  6EFF               	movwf	tosu,c
  2070   00130C  50FA               	movf	pclath,w,c
  2071   00130E  0012               	return		;indir
  2072   001310                     i2u23_49:
  2073   001310                     i2l271:
  2074   001310  0012               	return		;funcret
  2075   001312                     __end_of_TMR2_ISR:
  2076                           	callstack 0
  2077                           
  2078 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  2079 ;; Defined at:
  2080 ;;		line 136 in file "mcc_generated_files/tmr2.c"
  2081 ;; Parameters:    Size  Location     Type
  2082 ;;		None
  2083 ;; Auto vars:     Size  Location     Type
  2084 ;;		None
  2085 ;; Return value:  Size  Location     Type
  2086 ;;                  1    wreg      void 
  2087 ;; Registers used:
  2088 ;;		None
  2089 ;; Tracked objects:
  2090 ;;		On entry : 0/0
  2091 ;;		On exit  : 0/0
  2092 ;;		Unchanged: 0/0
  2093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2097 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2098 ;;Total ram usage:        0 bytes
  2099 ;; Hardware stack levels used: 1
  2100 ;; This function calls:
  2101 ;;		Nothing
  2102 ;; This function is called by:
  2103 ;;		_TMR2_Initialize
  2104 ;;		_TMR2_ISR
  2105 ;; This function uses a non-reentrant model
  2106 ;;
  2107                           
  2108                           	psect	text23
  2109   001468                     __ptext23:
  2110                           	callstack 0
  2111   001468                     _TMR2_DefaultInterruptHandler:
  2112                           	callstack 22
  2113   001468  0012               	return		;funcret
  2114   00146A                     __end_of_TMR2_DefaultInterruptHandler:
  2115                           	callstack 0
  2116                           
  2117 ;; *************** function _EUSART1_Transmit_ISR *****************
  2118 ;; Defined at:
  2119 ;;		line 202 in file "mcc_generated_files/eusart1.c"
  2120 ;; Parameters:    Size  Location     Type
  2121 ;;		None
  2122 ;; Auto vars:     Size  Location     Type
  2123 ;;		None
  2124 ;; Return value:  Size  Location     Type
  2125 ;;                  1    wreg      void 
  2126 ;; Registers used:
  2127 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2128 ;; Tracked objects:
  2129 ;;		On entry : 0/0
  2130 ;;		On exit  : 0/0
  2131 ;;		Unchanged: 0/0
  2132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2136 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2137 ;;Total ram usage:        0 bytes
  2138 ;; Hardware stack levels used: 1
  2139 ;; This function calls:
  2140 ;;		Nothing
  2141 ;; This function is called by:
  2142 ;;		_EUSART1_Initialize
  2143 ;;		_INTERRUPT_InterruptManager
  2144 ;; This function uses a non-reentrant model
  2145 ;;
  2146                           
  2147                           	psect	text24
  2148   0012A6                     __ptext24:
  2149                           	callstack 0
  2150   0012A6                     _EUSART1_Transmit_ISR:
  2151                           	callstack 23
  2152   0012A6                     
  2153                           ;mcc_generated_files/eusart1.c: 206:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
  2154   0012A6  0E08               	movlw	8
  2155   0012A8  6025               	cpfslt	_eusart1TxBufferRemaining^0,c	;volatile
  2156   0012AA  EF59  F009         	goto	i2u14_41
  2157   0012AE  EF5B  F009         	goto	i2u14_40
  2158   0012B2                     i2u14_41:
  2159   0012B2  EF6F  F009         	goto	i2l163
  2160   0012B6                     i2u14_40:
  2161   0012B6                     
  2162                           ;mcc_generated_files/eusart1.c: 207:     {;mcc_generated_files/eusart1.c: 208:         T
      +                          XREG1 = eusart1TxBuffer[eusart1TxTail++];
  2163   0012B6  5026               	movf	_eusart1TxTail^0,w,c
  2164   0012B8  0F11               	addlw	low _eusart1TxBuffer
  2165   0012BA  6ED9               	movwf	fsr2l,c
  2166   0012BC  6ADA               	clrf	fsr2h,c
  2167   0012BE  50DF               	movf	indf2,w,c
  2168   0012C0  6EAD               	movwf	173,c	;volatile
  2169   0012C2  2A26               	incf	_eusart1TxTail^0,f,c	;volatile
  2170   0012C4                     
  2171                           ;mcc_generated_files/eusart1.c: 209:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
  2172   0012C4  0E07               	movlw	7
  2173   0012C6  6426               	cpfsgt	_eusart1TxTail^0,c	;volatile
  2174   0012C8  EF68  F009         	goto	i2u15_41
  2175   0012CC  EF6A  F009         	goto	i2u15_40
  2176   0012D0                     i2u15_41:
  2177   0012D0  EF6C  F009         	goto	i2l1227
  2178   0012D4                     i2u15_40:
  2179   0012D4                     
  2180                           ;mcc_generated_files/eusart1.c: 210:         {;mcc_generated_files/eusart1.c: 211:      
      +                                 eusart1TxTail = 0;
  2181   0012D4  0E00               	movlw	0
  2182   0012D6  6E26               	movwf	_eusart1TxTail^0,c	;volatile
  2183   0012D8                     i2l1227:
  2184                           
  2185                           ;mcc_generated_files/eusart1.c: 213:         eusart1TxBufferRemaining++;
  2186   0012D8  2A25               	incf	_eusart1TxBufferRemaining^0,f,c	;volatile
  2187                           
  2188                           ;mcc_generated_files/eusart1.c: 214:     }
  2189   0012DA  EF70  F009         	goto	i2l166
  2190   0012DE                     i2l163:
  2191                           
  2192                           ;mcc_generated_files/eusart1.c: 216:     {;mcc_generated_files/eusart1.c: 217:         P
      +                          IE1bits.TX1IE = 0;
  2193   0012DE  989D               	bcf	157,4,c	;volatile
  2194   0012E0                     i2l166:
  2195   0012E0  0012               	return		;funcret
  2196   0012E2                     __end_of_EUSART1_Transmit_ISR:
  2197                           	callstack 0
  2198                           
  2199 ;; *************** function _EUSART1_Receive_ISR *****************
  2200 ;; Defined at:
  2201 ;;		line 221 in file "mcc_generated_files/eusart1.c"
  2202 ;; Parameters:    Size  Location     Type
  2203 ;;		None
  2204 ;; Auto vars:     Size  Location     Type
  2205 ;;		None
  2206 ;; Return value:  Size  Location     Type
  2207 ;;                  1    wreg      void 
  2208 ;; Registers used:
  2209 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  2210 ;; Tracked objects:
  2211 ;;		On entry : 0/0
  2212 ;;		On exit  : 0/0
  2213 ;;		Unchanged: 0/0
  2214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2218 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2219 ;;Total ram usage:        0 bytes
  2220 ;; Hardware stack levels used: 1
  2221 ;; Hardware stack levels required when called: 2
  2222 ;; This function calls:
  2223 ;;		NULL
  2224 ;;		_EUSART1_DefaultErrorHandler
  2225 ;;		_EUSART1_DefaultFramingErrorHandler
  2226 ;;		_EUSART1_DefaultOverrunErrorHandler
  2227 ;;		_EUSART1_RxDataHandler
  2228 ;; This function is called by:
  2229 ;;		_EUSART1_Initialize
  2230 ;;		_INTERRUPT_InterruptManager
  2231 ;; This function uses a non-reentrant model
  2232 ;;
  2233                           
  2234                           	psect	text25
  2235   0010B4                     __ptext25:
  2236                           	callstack 0
  2237   0010B4                     _EUSART1_Receive_ISR:
  2238                           	callstack 21
  2239   0010B4                     
  2240                           ;mcc_generated_files/eusart1.c: 224:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
  2241   0010B4  5024               	movf	_eusart1RxHead^0,w,c
  2242   0010B6  0F01               	addlw	low _eusart1RxStatusBuffer
  2243   0010B8  6ED9               	movwf	fsr2l,c
  2244   0010BA  6ADA               	clrf	fsr2h,c
  2245   0010BC  6ADF               	clrf	indf2,c
  2246   0010BE                     
  2247                           ;mcc_generated_files/eusart1.c: 226:     if(RCSTA1bits.FERR){
  2248   0010BE  A4AB               	btfss	171,2,c	;volatile
  2249   0010C0  EF64  F008         	goto	i2u16_41
  2250   0010C4  EF66  F008         	goto	i2u16_40
  2251   0010C8                     i2u16_41:
  2252   0010C8  EF78  F008         	goto	i2l1237
  2253   0010CC                     i2u16_40:
  2254   0010CC                     
  2255                           ;mcc_generated_files/eusart1.c: 227:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
  2256   0010CC  5024               	movf	_eusart1RxHead^0,w,c
  2257   0010CE  0F01               	addlw	low _eusart1RxStatusBuffer
  2258   0010D0  6ED9               	movwf	fsr2l,c
  2259   0010D2  6ADA               	clrf	fsr2h,c
  2260   0010D4  82DF               	bsf	indf2,1,c
  2261   0010D6                     
  2262                           ;mcc_generated_files/eusart1.c: 228:         EUSART1_FramingErrorHandler();
  2263   0010D6  D802               	call	i2u17_48
  2264   0010D8  EF78  F008         	goto	i2u17_49
  2265   0010DC                     i2u17_48:
  2266   0010DC  0005               	push	
  2267   0010DE  6EFA               	movwf	pclath,c
  2268   0010E0  504B               	movf	_EUSART1_FramingErrorHandler^0,w,c
  2269   0010E2  6EFD               	movwf	tosl,c
  2270   0010E4  504C               	movf	(_EUSART1_FramingErrorHandler+1)^0,w,c
  2271   0010E6  6EFE               	movwf	tosh,c
  2272   0010E8  50F8               	movf	tblptru,w,c
  2273   0010EA  6EFF               	movwf	tosu,c
  2274   0010EC  50FA               	movf	pclath,w,c
  2275   0010EE  0012               	return		;indir
  2276   0010F0                     i2u17_49:
  2277   0010F0                     i2l1237:
  2278                           
  2279                           ;mcc_generated_files/eusart1.c: 231:     if(RCSTA1bits.OERR){
  2280   0010F0  A2AB               	btfss	171,1,c	;volatile
  2281   0010F2  EF7D  F008         	goto	i2u18_41
  2282   0010F6  EF7F  F008         	goto	i2u18_40
  2283   0010FA                     i2u18_41:
  2284   0010FA  EF91  F008         	goto	i2l1243
  2285   0010FE                     i2u18_40:
  2286   0010FE                     
  2287                           ;mcc_generated_files/eusart1.c: 232:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
  2288   0010FE  5024               	movf	_eusart1RxHead^0,w,c
  2289   001100  0F01               	addlw	low _eusart1RxStatusBuffer
  2290   001102  6ED9               	movwf	fsr2l,c
  2291   001104  6ADA               	clrf	fsr2h,c
  2292   001106  84DF               	bsf	indf2,2,c
  2293   001108                     
  2294                           ;mcc_generated_files/eusart1.c: 233:         EUSART1_OverrunErrorHandler();
  2295   001108  D802               	call	i2u19_48
  2296   00110A  EF91  F008         	goto	i2u19_49
  2297   00110E                     i2u19_48:
  2298   00110E  0005               	push	
  2299   001110  6EFA               	movwf	pclath,c
  2300   001112  5049               	movf	_EUSART1_OverrunErrorHandler^0,w,c
  2301   001114  6EFD               	movwf	tosl,c
  2302   001116  504A               	movf	(_EUSART1_OverrunErrorHandler+1)^0,w,c
  2303   001118  6EFE               	movwf	tosh,c
  2304   00111A  50F8               	movf	tblptru,w,c
  2305   00111C  6EFF               	movwf	tosu,c
  2306   00111E  50FA               	movf	pclath,w,c
  2307   001120  0012               	return		;indir
  2308   001122                     i2u19_49:
  2309   001122                     i2l1243:
  2310                           
  2311                           ;mcc_generated_files/eusart1.c: 236:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
  2312   001122  5024               	movf	_eusart1RxHead^0,w,c
  2313   001124  0F01               	addlw	low _eusart1RxStatusBuffer
  2314   001126  6ED9               	movwf	fsr2l,c
  2315   001128  6ADA               	clrf	fsr2h,c
  2316   00112A  50DF               	movf	indf2,w,c
  2317   00112C  B4D8               	btfsc	status,2,c
  2318   00112E  EF9B  F008         	goto	i2u20_41
  2319   001132  EF9D  F008         	goto	i2u20_40
  2320   001136                     i2u20_41:
  2321   001136  EFAC  F008         	goto	i2l1247
  2322   00113A                     i2u20_40:
  2323   00113A                     
  2324                           ;mcc_generated_files/eusart1.c: 237:         EUSART1_ErrorHandler();
  2325   00113A  D802               	call	i2u21_48
  2326   00113C  EFAA  F008         	goto	i2u21_49
  2327   001140                     i2u21_48:
  2328   001140  0005               	push	
  2329   001142  6EFA               	movwf	pclath,c
  2330   001144  5047               	movf	_EUSART1_ErrorHandler^0,w,c
  2331   001146  6EFD               	movwf	tosl,c
  2332   001148  5048               	movf	(_EUSART1_ErrorHandler+1)^0,w,c
  2333   00114A  6EFE               	movwf	tosh,c
  2334   00114C  50F8               	movf	tblptru,w,c
  2335   00114E  6EFF               	movwf	tosu,c
  2336   001150  50FA               	movf	pclath,w,c
  2337   001152  0012               	return		;indir
  2338   001154                     i2u21_49:
  2339                           
  2340                           ;mcc_generated_files/eusart1.c: 238:     } else {
  2341   001154  EFAE  F008         	goto	i2l173
  2342   001158                     i2l1247:
  2343                           
  2344                           ;mcc_generated_files/eusart1.c: 239:         EUSART1_RxDataHandler();
  2345   001158  ECB0  F009         	call	_EUSART1_RxDataHandler	;wreg free
  2346   00115C                     i2l173:
  2347   00115C  0012               	return		;funcret
  2348   00115E                     __end_of_EUSART1_Receive_ISR:
  2349                           	callstack 0
  2350                           
  2351 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
  2352 ;; Defined at:
  2353 ;;		line 257 in file "mcc_generated_files/eusart1.c"
  2354 ;; Parameters:    Size  Location     Type
  2355 ;;		None
  2356 ;; Auto vars:     Size  Location     Type
  2357 ;;		None
  2358 ;; Return value:  Size  Location     Type
  2359 ;;                  1    wreg      void 
  2360 ;; Registers used:
  2361 ;;		None
  2362 ;; Tracked objects:
  2363 ;;		On entry : 0/0
  2364 ;;		On exit  : 0/0
  2365 ;;		Unchanged: 0/0
  2366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2371 ;;Total ram usage:        0 bytes
  2372 ;; Hardware stack levels used: 1
  2373 ;; This function calls:
  2374 ;;		Nothing
  2375 ;; This function is called by:
  2376 ;;		_EUSART1_Initialize
  2377 ;;		_EUSART1_Receive_ISR
  2378 ;; This function uses a non-reentrant model
  2379 ;;
  2380                           
  2381                           	psect	text26
  2382   001458                     __ptext26:
  2383                           	callstack 0
  2384   001458                     _EUSART1_DefaultOverrunErrorHandler:
  2385                           	callstack 22
  2386   001458                     
  2387                           ;mcc_generated_files/eusart1.c: 260:     RCSTA1bits.CREN = 0;
  2388   001458  98AB               	bcf	171,4,c	;volatile
  2389                           
  2390                           ;mcc_generated_files/eusart1.c: 261:     RCSTA1bits.CREN = 1;
  2391   00145A  88AB               	bsf	171,4,c	;volatile
  2392   00145C  0012               	return		;funcret
  2393   00145E                     __end_of_EUSART1_DefaultOverrunErrorHandler:
  2394                           	callstack 0
  2395                           
  2396 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
  2397 ;; Defined at:
  2398 ;;		line 255 in file "mcc_generated_files/eusart1.c"
  2399 ;; Parameters:    Size  Location     Type
  2400 ;;		None
  2401 ;; Auto vars:     Size  Location     Type
  2402 ;;		None
  2403 ;; Return value:  Size  Location     Type
  2404 ;;                  1    wreg      void 
  2405 ;; Registers used:
  2406 ;;		None
  2407 ;; Tracked objects:
  2408 ;;		On entry : 0/0
  2409 ;;		On exit  : 0/0
  2410 ;;		Unchanged: 0/0
  2411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2415 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2416 ;;Total ram usage:        0 bytes
  2417 ;; Hardware stack levels used: 1
  2418 ;; This function calls:
  2419 ;;		Nothing
  2420 ;; This function is called by:
  2421 ;;		_EUSART1_Initialize
  2422 ;;		_EUSART1_Receive_ISR
  2423 ;; This function uses a non-reentrant model
  2424 ;;
  2425                           
  2426                           	psect	text27
  2427   00146A                     __ptext27:
  2428                           	callstack 0
  2429   00146A                     _EUSART1_DefaultFramingErrorHandler:
  2430                           	callstack 22
  2431   00146A  0012               	return		;funcret
  2432   00146C                     __end_of_EUSART1_DefaultFramingErrorHandler:
  2433                           	callstack 0
  2434                           
  2435 ;; *************** function _EUSART1_DefaultErrorHandler *****************
  2436 ;; Defined at:
  2437 ;;		line 265 in file "mcc_generated_files/eusart1.c"
  2438 ;; Parameters:    Size  Location     Type
  2439 ;;		None
  2440 ;; Auto vars:     Size  Location     Type
  2441 ;;		None
  2442 ;; Return value:  Size  Location     Type
  2443 ;;                  1    wreg      void 
  2444 ;; Registers used:
  2445 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2446 ;; Tracked objects:
  2447 ;;		On entry : 0/0
  2448 ;;		On exit  : 0/0
  2449 ;;		Unchanged: 0/0
  2450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2454 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2455 ;;Total ram usage:        0 bytes
  2456 ;; Hardware stack levels used: 1
  2457 ;; Hardware stack levels required when called: 1
  2458 ;; This function calls:
  2459 ;;		_EUSART1_RxDataHandler
  2460 ;; This function is called by:
  2461 ;;		_EUSART1_Initialize
  2462 ;;		_EUSART1_Receive_ISR
  2463 ;; This function uses a non-reentrant model
  2464 ;;
  2465                           
  2466                           	psect	text28
  2467   00145E                     __ptext28:
  2468                           	callstack 0
  2469   00145E                     _EUSART1_DefaultErrorHandler:
  2470                           	callstack 21
  2471   00145E                     
  2472                           ;mcc_generated_files/eusart1.c: 266:     EUSART1_RxDataHandler();
  2473   00145E  ECB0  F009         	call	_EUSART1_RxDataHandler	;wreg free
  2474   001462  0012               	return		;funcret
  2475   001464                     __end_of_EUSART1_DefaultErrorHandler:
  2476                           	callstack 0
  2477                           
  2478 ;; *************** function _EUSART1_RxDataHandler *****************
  2479 ;; Defined at:
  2480 ;;		line 245 in file "mcc_generated_files/eusart1.c"
  2481 ;; Parameters:    Size  Location     Type
  2482 ;;		None
  2483 ;; Auto vars:     Size  Location     Type
  2484 ;;		None
  2485 ;; Return value:  Size  Location     Type
  2486 ;;                  1    wreg      void 
  2487 ;; Registers used:
  2488 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2489 ;; Tracked objects:
  2490 ;;		On entry : 0/0
  2491 ;;		On exit  : 0/0
  2492 ;;		Unchanged: 0/0
  2493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2498 ;;Total ram usage:        0 bytes
  2499 ;; Hardware stack levels used: 1
  2500 ;; This function calls:
  2501 ;;		Nothing
  2502 ;; This function is called by:
  2503 ;;		_EUSART1_Receive_ISR
  2504 ;;		_EUSART1_DefaultErrorHandler
  2505 ;; This function uses a non-reentrant model
  2506 ;;
  2507                           
  2508                           	psect	text29
  2509   001360                     __ptext29:
  2510                           	callstack 0
  2511   001360                     _EUSART1_RxDataHandler:
  2512                           	callstack 22
  2513   001360                     
  2514                           ;mcc_generated_files/eusart1.c: 247:     eusart1RxBuffer[eusart1RxHead++] = RCREG1;
  2515   001360  5024               	movf	_eusart1RxHead^0,w,c
  2516   001362  0F09               	addlw	low _eusart1RxBuffer
  2517   001364  6ED9               	movwf	fsr2l,c
  2518   001366  6ADA               	clrf	fsr2h,c
  2519   001368  CFAE FFDF          	movff	4014,indf2	;volatile
  2520   00136C  2A24               	incf	_eusart1RxHead^0,f,c	;volatile
  2521   00136E                     
  2522                           ;mcc_generated_files/eusart1.c: 248:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  2523   00136E  0E07               	movlw	7
  2524   001370  6424               	cpfsgt	_eusart1RxHead^0,c	;volatile
  2525   001372  EFBD  F009         	goto	i2u8_41
  2526   001376  EFBF  F009         	goto	i2u8_40
  2527   00137A                     i2u8_41:
  2528   00137A  EFC1  F009         	goto	i2l1107
  2529   00137E                     i2u8_40:
  2530   00137E                     
  2531                           ;mcc_generated_files/eusart1.c: 249:     {;mcc_generated_files/eusart1.c: 250:         e
      +                          usart1RxHead = 0;
  2532   00137E  0E00               	movlw	0
  2533   001380  6E24               	movwf	_eusart1RxHead^0,c	;volatile
  2534   001382                     i2l1107:
  2535                           
  2536                           ;mcc_generated_files/eusart1.c: 252:     eusart1RxCount++;
  2537   001382  2A22               	incf	_eusart1RxCount^0,f,c	;volatile
  2538   001384  0012               	return		;funcret
  2539   001386                     __end_of_EUSART1_RxDataHandler:
  2540                           	callstack 0
  2541                           
  2542                           	psect	text30
  2543   000000                     __ptext30:
  2544                           	callstack 0
  2545   000000                     
  2546                           	psect	rparam
  2547   000000                     
  2548                           	psect	temp
  2549   000051                     btemp:
  2550                           	callstack 0
  2551   000051                     	ds	1
  2552   000000                     int$flags	set	btemp
  2553   000000                     wtemp8	set	btemp+1
  2554   000000                     ttemp5	set	btemp+1
  2555   000000                     ttemp6	set	btemp+4
  2556   000000                     ttemp7	set	btemp+8
  2557                           
  2558                           	psect	config
  2559                           
  2560                           ;Config register CONFIG1L @ 0x300000
  2561                           ;	VREG Sleep Enable bit
  2562                           ;	RETEN = OFF, Ultra low-power regulator is Disabled (Controlled by REGSLP bit)
  2563                           ;	LF-INTOSC Low-power Enable bit
  2564                           ;	INTOSCSEL = HIGH, LF-INTOSC in High-power mode during Sleep
  2565                           ;	SOSC Power Selection and mode Configuration bits
  2566                           ;	SOSCSEL = DIG, Digital (SCLKI) mode
  2567                           ;	Extended Instruction Set
  2568                           ;	XINST = OFF, Disabled
  2569   300000                     	org	3145728
  2570   300000  15                 	db	21
  2571                           
  2572                           ;Config register CONFIG1H @ 0x300001
  2573                           ;	Oscillator
  2574                           ;	FOSC = INTIO2, Internal RC oscillator
  2575                           ;	PLL x4 Enable bit
  2576                           ;	PLLCFG = OFF, Disabled
  2577                           ;	Fail-Safe Clock Monitor
  2578                           ;	FCMEN = OFF, Disabled
  2579                           ;	Internal External Oscillator Switch Over Mode
  2580                           ;	IESO = OFF, Disabled
  2581   300001                     	org	3145729
  2582   300001  08                 	db	8
  2583                           
  2584                           ;Config register CONFIG2L @ 0x300002
  2585                           ;	Power Up Timer
  2586                           ;	PWRTEN = OFF, Disabled
  2587                           ;	Brown Out Detect
  2588                           ;	BOREN = SBORDIS, Enabled in hardware, SBOREN disabled
  2589                           ;	Brown-out Reset Voltage bits
  2590                           ;	BORV = 3, 1.8V
  2591                           ;	BORMV Power level
  2592                           ;	BORPWR = ZPBORMV, ZPBORMV instead of BORMV is selected
  2593   300002                     	org	3145730
  2594   300002  7F                 	db	127
  2595                           
  2596                           ;Config register CONFIG2H @ 0x300003
  2597                           ;	Watchdog Timer
  2598                           ;	WDTEN = OFF, WDT disabled in hardware; SWDTEN bit disabled
  2599                           ;	Watchdog Postscaler
  2600                           ;	WDTPS = 1048576, 1:1048576
  2601   300003                     	org	3145731
  2602   300003  50                 	db	80
  2603                           
  2604                           ; Padding undefined space
  2605   300004                     	org	3145732
  2606   300004  FF                 	db	255
  2607                           
  2608                           ;Config register CONFIG3H @ 0x300005
  2609                           ;	ECAN Mux bit
  2610                           ;	CANMX = PORTB, ECAN TX and RX pins are located on RB2 and RB3, respectively
  2611                           ;	MSSP address masking
  2612                           ;	MSSPMSK = MSK7, 7 Bit address masking mode
  2613                           ;	Master Clear Enable
  2614                           ;	MCLRE = ON, MCLR Enabled, RE3 Disabled
  2615   300005                     	org	3145733
  2616   300005  89                 	db	137
  2617                           
  2618                           ;Config register CONFIG4L @ 0x300006
  2619                           ;	Stack Overflow Reset
  2620                           ;	STVREN = ON, Enabled
  2621                           ;	Boot Block Size
  2622                           ;	BBSIZ = BB2K, 2K word Boot Block size
  2623                           ;	Background Debugger
  2624                           ;	DEBUG = 0x1, unprogrammed default
  2625   300006                     	org	3145734
  2626   300006  91                 	db	145
  2627                           
  2628                           ; Padding undefined space
  2629   300007                     	org	3145735
  2630   300007  FF                 	db	255
  2631                           
  2632                           ;Config register CONFIG5L @ 0x300008
  2633                           ;	Code Protect 00800-01FFF
  2634                           ;	CP0 = OFF, Disabled
  2635                           ;	Code Protect 02000-03FFF
  2636                           ;	CP1 = OFF, Disabled
  2637                           ;	Code Protect 04000-05FFF
  2638                           ;	CP2 = OFF, Disabled
  2639                           ;	Code Protect 06000-07FFF
  2640                           ;	CP3 = OFF, Disabled
  2641   300008                     	org	3145736
  2642   300008  0F                 	db	15
  2643                           
  2644                           ;Config register CONFIG5H @ 0x300009
  2645                           ;	Code Protect Boot
  2646                           ;	CPB = OFF, Disabled
  2647                           ;	Data EE Read Protect
  2648                           ;	CPD = OFF, Disabled
  2649   300009                     	org	3145737
  2650   300009  C0                 	db	192
  2651                           
  2652                           ;Config register CONFIG6L @ 0x30000A
  2653                           ;	Table Write Protect 00800-01FFF
  2654                           ;	WRT0 = OFF, Disabled
  2655                           ;	Table Write Protect 02000-03FFF
  2656                           ;	WRT1 = OFF, Disabled
  2657                           ;	Table Write Protect 04000-05FFF
  2658                           ;	WRT2 = OFF, Disabled
  2659                           ;	Table Write Protect 06000-07FFF
  2660                           ;	WRT3 = OFF, Disabled
  2661   30000A                     	org	3145738
  2662   30000A  0F                 	db	15
  2663                           
  2664                           ;Config register CONFIG6H @ 0x30000B
  2665                           ;	Config. Write Protect
  2666                           ;	WRTC = OFF, Disabled
  2667                           ;	Table Write Protect Boot
  2668                           ;	WRTB = OFF, Disabled
  2669                           ;	Data EE Write Protect
  2670                           ;	WRTD = OFF, Disabled
  2671   30000B                     	org	3145739
  2672   30000B  E0                 	db	224
  2673                           
  2674                           ;Config register CONFIG7L @ 0x30000C
  2675                           ;	Table Read Protect 00800-01FFF
  2676                           ;	EBTR0 = OFF, Disabled
  2677                           ;	Table Read Protect 02000-03FFF
  2678                           ;	EBTR1 = OFF, Disabled
  2679                           ;	Table Read Protect 04000-05FFF
  2680                           ;	EBTR2 = OFF, Disabled
  2681                           ;	Table Read Protect 06000-07FFF
  2682                           ;	EBTR3 = OFF, Disabled
  2683   30000C                     	org	3145740
  2684   30000C  0F                 	db	15
  2685                           
  2686                           ;Config register CONFIG7H @ 0x30000D
  2687                           ;	Table Read Protect Boot
  2688                           ;	EBTRB = OFF, Disabled
  2689   30000D                     	org	3145741
  2690   30000D  40                 	db	64
  2691                           tosu	equ	0xFFF
  2692                           tosh	equ	0xFFE
  2693                           tosl	equ	0xFFD
  2694                           stkptr	equ	0xFFC
  2695                           pclatu	equ	0xFFB
  2696                           pclath	equ	0xFFA
  2697                           pcl	equ	0xFF9
  2698                           tblptru	equ	0xFF8
  2699                           tblptrh	equ	0xFF7
  2700                           tblptrl	equ	0xFF6
  2701                           tablat	equ	0xFF5
  2702                           prodh	equ	0xFF4
  2703                           prodl	equ	0xFF3
  2704                           indf0	equ	0xFEF
  2705                           postinc0	equ	0xFEE
  2706                           postdec0	equ	0xFED
  2707                           preinc0	equ	0xFEC
  2708                           plusw0	equ	0xFEB
  2709                           fsr0h	equ	0xFEA
  2710                           fsr0l	equ	0xFE9
  2711                           wreg	equ	0xFE8
  2712                           indf1	equ	0xFE7
  2713                           postinc1	equ	0xFE6
  2714                           postdec1	equ	0xFE5
  2715                           preinc1	equ	0xFE4
  2716                           plusw1	equ	0xFE3
  2717                           fsr1h	equ	0xFE2
  2718                           fsr1l	equ	0xFE1
  2719                           bsr	equ	0xFE0
  2720                           indf2	equ	0xFDF
  2721                           postinc2	equ	0xFDE
  2722                           postdec2	equ	0xFDD
  2723                           preinc2	equ	0xFDC
  2724                           plusw2	equ	0xFDB
  2725                           fsr2h	equ	0xFDA
  2726                           fsr2l	equ	0xFD9
  2727                           status	equ	0xFD8

Data Sizes:
    Strings     38
    Constant    0
    Data        0
    BSS         71
    Persistent  12
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     29      80
    BANK0           160      0      32
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), NULL(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), NULL(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), NULL(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), NULL(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), NULL(), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    printf@fmt	PTR const unsigned char  size(1) Largest target is 20
		 -> STR_1(CODE[18]), STR_2(CODE[20]), 

    S1304$buffer	PTR unsigned char  size(2) Largest target is 0

    S1304$source	PTR const unsigned char  size(2) Largest target is 0

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), NULL(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 20
		 -> STR_1(CODE[18]), STR_2(CODE[20]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 20
		 -> STR_1(CODE[18]), STR_2(CODE[20]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2442
                                             27 COMRAM     2     2      0
                _EUSART1_is_rx_ready
                  _SYSTEM_Initialize
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               4     3      1    1854
                                             25 COMRAM     2     1      1
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             5     1      4    1648
                                             20 COMRAM     5     1      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                            9     5      4    1298
                                             15 COMRAM     5     1      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     827
                                              6 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      45
                                              5 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Write                                        1     1      0      30
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     588
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM2_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0      98
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     490
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                           4     4      0       0
                                              0 COMRAM     4     4      0
                                NULL *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (8) _TMR2_ISR                                             0     0      0       0
                                NULL *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (9) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART1_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART1_Receive_ISR                                  0     0      0       0
                                NULL *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (9) _EUSART1_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _EUSART1_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _EUSART1_DefaultErrorHandler                          0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (9) _EUSART1_RxDataHandler                                0     0      0       0
 ---------------------------------------------------------------------------------
 (9) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_is_rx_ready
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM2_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
   _printf
     _vfprintf
       _vfpfcnvrt
         _fputc
           _putch
             _EUSART1_Write

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _EUSART1_Receive_ISR *
     NULL(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _TMR2_ISR *
     NULL(Fake) *
     _TMR2_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      49        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRlll       10F      0       0      37        0.0%
BITBANK13          100      0       0      46        0.0%
BANK13             100      0       0      23        0.0%
BITBANK12          100      0       0      45        0.0%
BANK12             100      0       0      22        0.0%
BITBANK11          100      0       0      20        0.0%
BANK11             100      0       0      21        0.0%
BITBANK10          100      0       0      44        0.0%
BANK10             100      0       0      19        0.0%
BITBANK9           100      0       0      43        0.0%
BANK9              100      0       0      18        0.0%
BITBANK8           100      0       0      42        0.0%
BANK8              100      0       0      17        0.0%
BITBANK7           100      0       0      41        0.0%
BANK7              100      0       0      16        0.0%
BITBANK6           100      0       0      40        0.0%
BANK6              100      0       0      15        0.0%
BITBANK5           100      0       0      39        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      20       5       20.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1D      50       1       85.1%
BITBANK14           41      0       0      47        0.0%
BANK14              41      0       0      48        0.0%
BITBIGSFRlhl        1F      0       0      35        0.0%
BITBIGSFRhhlh       1D      0       0      25        0.0%
BITBIGSFRhhllhh     1A      0       0      28        0.0%
BITBIGSFRhhh         D      0       0      24        0.0%
BITBIGSFRlhh         B      0       0      34        0.0%
BITBIGSFRllh         8      0       0      36        0.0%
BITBIGSFRhhllhh      8      0       0      30        0.0%
BITBIGSFRhl          6      0       0      33        0.0%
BITBIGSFRhhlll       4      0       0      32        0.0%
BITBIGSFRhhllhh      3      0       0      27        0.0%
BITBIGSFRhhllhh      3      0       0      29        0.0%
BITBIGSFRhhllhh      1      0       0      26        0.0%
BITBIGSFRhhllhl      1      0       0      31        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      70      38        0.0%
DATA                 0      0      70       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Feb 04 10:51:40 2025

              __end_of_TMR2_SetInterruptHandler 1426                        _eusart1TxBufferRemaining 0025  
                                             _i 001D                                              l25 1338  
                                            l51 13D6                                              l54 1410  
                                            u10 11E4                                              u11 11E0  
                                            u20 11F2                                              u21 11EE  
                                            u30 121A                                              u31 1216  
                                           l201 1438                                             l135 13EC  
                                           l160 141A                                             l129 11D0  
                                           l153 11E4                                             l218 1466  
                                           l154 11FA                                             l315 129E  
                                           l252 13A2                                             l157 1222  
                                           l192 1442                                             l274 1424  
                                           l195 1456                                             l189 144C  
                                           l198 142E                                             l288 13FE  
                                           u120 13EA                                             u121 13E4  
                                           u130 13EC                                             u400 104E  
                                           u401 104A                                             u410 125C  
                                           u411 1258                                             u350 0F3A  
                                           _PR2 0FCB                                             u351 0F36  
                                           u360 0F4C                                             u361 0F48  
                                           u370 0F74                                             u371 0F70  
                                           u380 0FAA                                             u381 0FA6  
                                           u390 1014                                             u391 1010  
                               _TMR2_Initialize 1386                                             tosl 0FFD  
                                           wreg 0FE8                                      _TXSTA1bits 0FAC  
                                          l1001 13BC                                            l1033 1264  
                                          l1027 10B2                                            l1213 13D8  
                                          l1141 1322                                            l1061 11FC  
                                          l1045 0FF0                                            l1143 1336  
                                          l1151 13FC                                            l1063 1208  
                                          l1071 1220                                            l1055 11D4  
                                          l1145 1464                                            l1065 120A  
                                          l1057 11D4                                            l1073 1414  
                                          l1147 1400                                            l1139 1312  
                                          l1067 121A                                            l1059 11F2  
                                          l1403 1080                                            l1149 13EE  
                                          l1421 139E                                            l1413 1386  
                                          l1069 121E                                            l1431 117E  
                                          l1423 115E                                            l1415 138E  
                                          l1407 108C                                            l1441 119A  
                                          l1433 1182                                            l1425 1160  
                                          l1417 1390                                            l1361 0F3A  
                                          l1443 11A6                                            l1435 1186  
                                          l1427 116C                                            l1419 1392  
                                          l1363 0F4C                                            l1451 1240  
                                          l1515 1288                                            l1381 144E  
                                          l1373 1430                                            l1445 11CE  
                                          l1437 118A                                            l1429 117A  
                                          l1461 13C6                                            l1365 0F56  
                                          l1453 125C                                            l1375 1426  
                                          l1439 118E                                            l1383 141C  
                                          l1463 13CA                                            l1367 0F74  
                                          l1359 0F28                                            l1391 1028  
                                          l1447 1224                                            l1471 13A8  
                                          l1377 1444                                            l1465 13CE  
                                          l1457 13BE                                            l1369 0FAA  
                                          l1393 102C                                            l1385 0FF2  
                                          l1449 122C                                            l1481 126E  
                                          l1379 143A                                            l1467 13D2  
                                          l1459 13C2                                            l1395 104E  
                                          l1387 1014                                            l1475 1266  
                                          l1397 1056                                            l1389 101C  
                                          l1469 13A4                                            l1477 126A  
                                          l1399 106A                                            l1479 126C  
                                          l1489 1272                                            STR_1 0F15  
                                          STR_2 0F01                                            _LATA 0F89  
                                          _LATB 0F8A                                            _LATC 0F8B  
                                          _TMR2 0FCC                                            _WPUB 0F5B  
                                 _EUSART1_Write 11D2                                            _dbuf 0060  
                                          _main 1266                                            _prec 001B  
                                          fsr1h 0FE2                                            fsr2h 0FDA  
                                          indf2 0FDF                                            fsr1l 0FE1  
                                          fsr2l 0FD9                                            btemp 0051  
                                          start 00D4                  fp__EUSART1_DefaultErrorHandler 0000  
                                  ___param_bank 0000                         __end_of_PWM2_Initialize 1400  
                 __end_of_OSCILLATOR_Initialize 1412                           _eusart1RxStatusBuffer 0001  
                                         ?_main 0028                                           _T2CON 0FCA  
                                         i2l231 00C0                                           i2l224 0062  
                                         i2l225 00C0                                           i2l226 009C  
                                         i2l163 12DE                                           i2l180 146A  
                                         i2l173 115C                                           i2l166 12E0  
                                         i2l183 145C                                           i2l271 1310  
                                         i2l177 1384                                           i2l186 1462  
                                         i2l277 1468                                    vfpfcnvrt@fmt 0039  
                                         _TRISA 0F92                                           _TRISB 0F93  
                                         _TRISC 0F94                            _EUSART1_Transmit_ISR 12A6  
                              __end_of_TMR2_ISR 1312                                           _flags 001F  
                                         _fputc 0F28                                           _verif 0020  
                                         _width 0019                                           _putch 1412  
                                ?_EUSART1_Write 0028                                           pclath 0FFA  
                                         pclatu 0FFB                                           tablat 0FF5  
                                         ttemp5 0052                                           ttemp6 0055  
                                         ttemp7 0059                                           status 0FD8  
                                         wtemp8 0052           fp__EUSART1_DefaultFramingErrorHandler 0000  
    __end_of_EUSART1_DefaultFramingErrorHandler 146C            ??_EUSART1_DefaultFramingErrorHandler 0028  
           ?_EUSART1_DefaultFramingErrorHandler 0028              _EUSART1_DefaultFramingErrorHandler 146A  
                               __initialization 133A                      __end_of_EUSART1_Initialize 11D2  
                                  __end_of_main 12A6                         __end_of_TMR2_Initialize 13A4  
                   ?_INTERRUPT_InterruptManager 0028                        _TMR2_SetInterruptHandler 141C  
                                        ??_main 0043                                   __activetblptr 0002  
                         ?_EUSART1_Transmit_ISR 0028                                          ?_fputc 002E  
                                        _CCPR2H 0F52                                          _CCPR2L 0F51  
                                        _ANCON0 0F5D                                          _ANCON1 0F5C  
                                        ?_putch 0028                                          i2l1101 136C  
                                        i2l1103 136E                                          i2l1105 137E  
                                        i2l1107 1382                                          i2l1221 12C2  
                                        i2l1301 007E                                          i2l1231 10BE  
                                        i2l1223 12C4                                          i2l1303 00AA  
                                        i2l1241 1108                                          i2l1233 10CC  
                                        i2l1225 12D4                                          i2l1217 12A6  
                                        i2l1305 00B8                                          i2l1243 1122  
                                        i2l1235 10D6                                          i2l1227 12D8  
                                        i2l1219 12B6                                          i2l1251 12E4  
                                        i2l1245 113A                                          i2l1237 10F0  
                                        i2l1229 10B4                                          i2l1253 12F6  
                                        i2l1247 1158                                          i2l1239 10FE  
                                        i2l1249 12E2                                          i2l1099 1360  
                                        i2l1187 1458                                          i2l1291 001A  
                                        i2l1189 145E                                          i2l1293 0028  
                                        i2l1295 0036                                          i2l1297 0044  
                                        i2l1299 0070                                          _RCREG1 0FAE  
                                        _RCSTA1 0FAB                                          _OSCCON 0FD3  
                                        _SPBRG1 0FAF                                          i2u8_40 137E  
                                        i2u8_41 137A                                          _TXREG1 0FAD  
                                        _TXSTA1 0FAC                                    vfprintf@cfmt 0040  
                      ?_EUSART1_SetErrorHandler 002C                                ?_PWM2_Initialize 0028  
                                        clear_0 1340                                          clear_1 134C  
                                        isa$std 0001                                          _printf 13A4  
              ??_EUSART1_SetOverrunErrorHandler 002E                 ?_EUSART1_SetOverrunErrorHandler 002C  
                                        fputc@c 002E                                    __mediumconst 0000  
                                        tblptrh 0FF7                                          tblptrl 0FF6  
                                        tblptru 0FF8                                __end_of_vfprintf 1266  
                               ??_EUSART1_Write 002C        TMR2_SetInterruptHandler@InterruptHandler 002C  
                               _eusart1RxBuffer 0009                                 _eusart1TxBuffer 0011  
                             _SYSTEM_Initialize 13BE                                      __accesstop 0060  
                       __end_of__initialization 1352                              ?_SYSTEM_Initialize 0028  
                                 ___rparam_used 0001                   __end_of_EUSART1_RxDataHandler 1386  
                                __pcstackCOMRAM 0028                             ??_SYSTEM_Initialize 002E  
                                     ?_TMR2_ISR 0028                                   __end_of_fputc 0FF2  
                                 __end_of_putch 141C                                ?_TMR2_Initialize 0028  
                        ??_EUSART1_Transmit_ISR 0028                     __end_of_EUSART1_Receive_ISR 115E  
                                       ??_fputc 0032                       __end_of_SYSTEM_Initialize 13D8  
                                       ??_putch 002D                                   _eusart1RxHead 0024  
                                 _eusart1TxHead 0027                                   _eusart1RxTail 0023  
                                    __pbssBANK0 0060                                   _eusart1TxTail 0026  
             _EUSART1_TxDefaultInterruptHandler 004F                 ??_EUSART1_SetRxInterruptHandler 002E  
                                    __pnvCOMRAM 0045                 __end_of_EUSART1_SetErrorHandler 1458  
                                    ??_TMR2_ISR 0028                                         _CCP2CON 0F50  
                                       ?_printf 0041          __end_of_EUSART1_SetFramingErrorHandler 144E  
                _EUSART1_SetFramingErrorHandler 1444                    ?_EUSART1_DefaultErrorHandler 0028  
                                       _REFOCON 0F9A                                         _OSCCON2 0FD2  
                                       i2u20_40 113A                                         i2u20_41 1136  
                                       i2u21_48 1140                                         i2u14_40 12B6  
                                       i2u22_40 12F6                                         i2u30_40 0070  
                                       i2u21_49 1154                                         i2u14_41 12B2  
                                       i2u22_41 12F2                                         i2u30_41 006C  
                                       i2u15_40 12D4                                         i2u31_40 007E  
                                       i2u15_41 12D0                                         i2u31_41 007A  
                                       i2u16_40 10CC                                         i2u23_48 12FC  
                                       i2u16_41 10C8                                         i2u23_49 1310  
                                       i2u33_40 00AA                                         i2u32_48 0084  
                                       i2u33_41 00A6                                         i2u32_49 0098  
                                       i2u18_40 10FE                                         i2u17_48 10DC  
                                       i2u34_40 00B8                                         i2u26_40 0028  
                                       i2u18_41 10FA                                         i2u17_49 10F0  
                                       i2u34_41 00B4                                         i2u26_41 0024  
                                       i2u27_40 0036                                         i2u27_41 0032  
                                       i2u19_48 110E                                         i2u28_40 0044  
                                       i2u19_49 1122                                         i2u28_41 0040  
                                       i2u29_48 004A                                         i2u29_49 005E  
                                       _OSCTUNE 0F9B                                         _SPBRGH1 0F7D  
                                       __Hparam 0000                                         __Lparam 0000  
                    ??_TMR2_SetInterruptHandler 002E                                       ?_vfprintf 003C  
                                  __psmallconst 0F00                             _EUSART1_is_rx_ready 13D8  
                                       __pcinit 133A                                         __ramtop 0F00  
                                       __ptext0 1266                                         __ptext1 13A4  
                                       __ptext2 1224                                         __ptext3 0FF2  
                                       __ptext4 0F28                                         __ptext5 1412  
                                       __ptext6 11D2                                         __ptext7 13BE  
                                       __ptext8 1386                                         __ptext9 141C  
                         _OSCILLATOR_Initialize 1400                                       _T2CONbits 0FCA  
                            _EUSART1_Initialize 115E                        ??_PIN_MANAGER_Initialize 002C  
                 ??_EUSART1_DefaultErrorHandler 0028                            end_of_initialization 1352  
                          ?_EUSART1_is_rx_ready 0028                             ?_EUSART1_Initialize 0028  
                                       fputc@fp 0030                                   __Lmediumconst 0000  
                   _EUSART1_OverrunErrorHandler 0049           __end_of_EUSART1_SetRxInterruptHandler 143A  
                 _EUSART1_SetRxInterruptHandler 1430                               __end_of_vfpfcnvrt 10B4  
                                       postdec2 0FDD                                         postinc0 0FEE  
                                       postinc1 0FE6                                         postinc2 0FDE  
                                    ??_vfprintf 0040                            ??_EUSART1_Initialize 002E  
                       fp__EUSART1_Transmit_ISR 0000                             EUSART1_Write@txData 002C  
                         ??_EUSART1_is_rx_ready 002C                                    _EUSART1_Read 0000  
                  __end_of_INTERRUPT_Initialize 1468            __end_of_TMR2_DefaultInterruptHandler 146A  
                  _TMR2_DefaultInterruptHandler 1468                                     vfpfcnvrt@ap 003A  
                                   vfpfcnvrt@fp 0037                          ?_OSCILLATOR_Initialize 0028  
                                __end_of_printf 13BE                             start_initialization 133A  
 EUSART1_SetRxInterruptHandler@interruptHandler 002C   EUSART1_SetTxInterruptHandler@interruptHandler 002C  
                                   putch@txData 002D                           __end_of_EUSART1_Write 1224  
                        fp__EUSART1_Receive_ISR 0000                                     vfprintf@fmt 003E  
                         _EUSART1_RxDataHandler 1360                                     _CCPTMRSbits 0F99  
                ?_EUSART1_SetRxInterruptHandler 002C                 fp__TMR2_DefaultInterruptHandler 0000  
                 ?_TMR2_DefaultInterruptHandler 0028                                        ??_printf 0042  
                                _eusart1RxCount 0022                                     __pbssCOMRAM 0001  
             _EUSART1_RxDefaultInterruptHandler 004D                 ??_EUSART1_SetTxInterruptHandler 002E  
              ??_EUSART1_SetFramingErrorHandler 002E                 ?_EUSART1_SetFramingErrorHandler 002C  
                        _PIN_MANAGER_Initialize 1312                                       __pintcode 0008  
                  ??_INTERRUPT_InterruptManager 0028                                     __smallconst 0F00  
                                      _BAUDCON1 0FA7           fp__EUSART1_DefaultOverrunErrorHandler 0000  
    __end_of_EUSART1_DefaultOverrunErrorHandler 145E            ??_EUSART1_DefaultOverrunErrorHandler 0028  
           ?_EUSART1_DefaultOverrunErrorHandler 0028              _EUSART1_DefaultOverrunErrorHandler 1458  
                          _EUSART1_ErrorHandler 0047                         _EUSART1_SetErrorHandler 144E  
                          _INTERRUPT_Initialize 1464                               ??_PWM2_Initialize 002C  
       EUSART1_SetErrorHandler@interruptHandler 002C                                        _PIE1bits 0F9D  
                                      _PIR1bits 0F9E                          ?_EUSART1_RxDataHandler 0028  
                                      _RCONbits 0FD0                                        _TMR2_ISR 12E2  
                                     _vfpfcnvrt 0FF2                  ??_TMR2_DefaultInterruptHandler 0028  
                     ?_TMR2_SetInterruptHandler 002C                                      vfpfcnvrt@c 003B  
                                   _INTCON2bits 0FF1                           ?_INTERRUPT_Initialize 0028  
                             ??_TMR2_Initialize 002E           __end_of_EUSART1_SetTxInterruptHandler 1430  
                 _EUSART1_SetTxInterruptHandler 1426                                        __Hrparam 0000  
                                    vfprintf@ap 003F                                        __Lrparam 0000  
                                    vfprintf@fp 003C                         ??_OSCILLATOR_Initialize 002C  
                                    ?_vfpfcnvrt 0037                       ??_EUSART1_SetErrorHandler 002E  
           __end_of_EUSART1_DefaultErrorHandler 1464                     _EUSART1_DefaultErrorHandler 145E  
                   __end_of_EUSART1_is_rx_ready 13EE                                        __ptext10 13EE  
                                      __ptext11 1312                                        __ptext20 13D8  
                                      __ptext12 1400                                        __ptext13 1464  
                                      __ptext30 0000                                        __ptext22 12E2  
                                      __ptext14 115E                                        __ptext23 1468  
                                      __ptext15 1426                                        __ptext24 12A6  
                                      __ptext16 1430                                        __ptext25 10B4  
                                      __ptext17 143A                                        __ptext26 1458  
                                      __ptext18 1444                                        __ptext27 146A  
                                      __ptext19 144E                                        __ptext28 145E  
                                      __ptext29 1360  EUSART1_SetOverrunErrorHandler@interruptHandler 002C  
                                      isa$xinst 0000                                        int$flags 0051  
                                      _vfprintf 1224              __end_of_INTERRUPT_InterruptManager 00D4  
                    _INTERRUPT_InterruptManager 0008                                       printf@fmt 0041  
                   _EUSART1_FramingErrorHandler 004B                             _EUSART1_Receive_ISR 10B4  
                                    _INTCONbits 0FF2                          ??_INTERRUPT_Initialize 002C  
                                      intlevel2 0000                            ?_EUSART1_Receive_ISR 0028  
                       ?_PIN_MANAGER_Initialize 0028          __end_of_EUSART1_SetOverrunErrorHandler 1444  
                _EUSART1_SetOverrunErrorHandler 143A                                      _RCSTA1bits 0FAB  
                  __end_of_EUSART1_Transmit_ISR 12E2                                        printf@ap 0042  
EUSART1_SetFramingErrorHandler@interruptHandler 002C                  ?_EUSART1_SetTxInterruptHandler 002C  
                                   ??_vfpfcnvrt 003B                              _eusart1RxLastError 0021  
                               _PWM2_Initialize 13EE                           ??_EUSART1_Receive_ISR 0028  
                __end_of_PIN_MANAGER_Initialize 133A                           _TMR2_InterruptHandler 0045  
                       ??_EUSART1_RxDataHandler 0028  
